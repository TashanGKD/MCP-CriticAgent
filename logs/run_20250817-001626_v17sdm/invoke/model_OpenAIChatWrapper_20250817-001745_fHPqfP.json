{
    "model_class": "OpenAIChatWrapper",
    "timestamp": "20250817-001745",
    "arguments": {
        "temperature": 0.3,
        "max_tokens": 800,
        "model": "qwen-plus",
        "messages": [
            {
                "role": "system",
                "content": "你是一个专业的MCP(Model Context Protocol)工具测试结果分析专家。\n\n你的任务是分析测试执行结果，判断测试是否通过，并提供详细的分析报告。\n\n## 输入信息格式:\n- 测试用例名称: [name]\n- 测试描述: [description]  \n- 调用工具: [tool_name]\n- 输入参数: [parameters]\n- 期望结果类型: [expected_type]\n- 期望结果内容: [expected_result]\n- 实际执行时间: [execution_time]\n- 实际响应: [actual_response]\n- 错误信息: [error_message]\n\n## 分析原则:\n1. **功能正确性** - 工具是否按预期工作\n2. **响应有效性** - 返回数据是否有意义和完整\n3. **性能表现** - 响应时间是否合理\n4. **错误处理** - 错误信息是否清晰有用\n5. **稳定性** - 结果是否一致可靠\n\n## 输出格式:\n请以JSON格式输出分析结果:\n```json\n{\n  \"status\": \"pass|fail|error\",\n  \"confidence\": 0.0-1.0,\n  \"analysis\": \"详细分析说明\",\n  \"issues\": [\"发现的问题列表\"],\n  \"recommendations\": [\"改进建议\"]\n}\n```\n\n## 判断标准:\n- **PASS**: 工具响应正常，结果符合预期\n- **FAIL**: 工具响应但结果不符合预期\n- **ERROR**: 工具无法响应或出现严重错误\n\n现在请分析给定的测试结果。"
            },
            {
                "role": "user",
                "content": "## Conversation History\nuser: \n请分析以下MCP工具测试结果:\n\n测试用例名称: 基础连通性测试\n测试描述: 验证MCP服务器是否正常启动并能够响应基本请求。\n调用工具: resolve-library-id\n输入参数: {\"libraryName\": \"dummy-library\"}\n期望结果类型: error\n期望结果内容: 明确提示无法找到匹配的库或建议查询优化。\n执行时间: 2.851秒\n\n实际响应:\n{\n  \"success\": true,\n  \"result\": {\n    \"content\": [\n      {\n        \"type\": \"text\",\n        \"text\": \"Available Libraries (top matches):\\n\\nEach result includes:\\n- Library ID: Context7-compatible identifier (format: /org/project)\\n- Name: Library or package name\\n- Description: Short summary\\n- Code Snippets: Number of available code examples\\n- Trust Score: Authority indicator\\n- Versions: List of versions if available. Use one of those versions if and only if the user explicitly provides a version in their query.\\n\\nFor best results, select libraries based on name match, trust score, snippet coverage, and relevance to your use case.\\n\\n----------\\n\\n- Title: Dumi\\n- Context7-compatible library ID: /umijs/dumi\\n- Description: 📖 Static Site Generator for component library development\\n- Code Snippets: 159\\n- Trust Score: 8.2\\n----------\\n- Title: Testing Library\\n- Context7-compatible library ID: /websites/testing-library_com-docs\\n- Description: Testing Library is a family of packages for user-centric UI component testing. It helps you write maintainable tests by querying and interacting with DOM nodes, avoiding implementation details, and supporting various frameworks like React, Angular, and Vue.\\n- Code Snippets: 579\\n----------\\n- Title: My Dummy Test3\\n- Context7-compatible library ID: /kkkkkom/my_dummy_test3\\n- Description: \\n- Code Snippets: 72\\n----------\\n- Title: SMB Library\\n- Context7-compatible library ID: /talaloni/smblibrary\\n- Description: Free, Open Source, User-Mode SMB 1.0/CIFS, SMB 2.0, SMB 2.1 and SMB 3.0 server and client library\\n- Code Snippets: 16\\n- Trust Score: 8.2\\n----------\\n- Title: Blockly Samples\\n- Context7-compatible library ID: /google/blockly-samples\\n- Description: This repository contains plugins, codelabs, and examples that demonstrate how to use and extend the Blockly library.\\n- Code Snippets: 386\\n- Trust Score: 8.9\\n----------\\n- Title: Testing Library User Event\\n- Context7-compatible library ID: /testing-library/user-event\\n- Description: 🐕 Simulate user events\\n- Code Snippets: 7\\n- Trust Score: 9.3\\n----------\\n- Title: Placeholder API\\n- Context7-compatible library ID: /websites/placeholders_pb4_eu_dev\\n- Description: Placeholder API is a Java library for creating and parsing text placeholders, offering simplified text formatting for developers.\\n- Code Snippets: 30\\n- Trust Score: 7.5\\n----------\\n- Title: Testing Library\\n- Context7-compatible library ID: /testing-library/testing-library-docs\\n- Description: docs site for @testing-library/*\\n- Code Snippets: 499\\n- Trust Score: 9.3\\n----------\\n- Title: React Native Testing Library\\n- Context7-compatible library ID: /callstack/react-native-testing-library\\n- Description: Developer-friendly and complete React Native testing utilities that encourage good testing practices by simulating React Native runtime.\\n- Code Snippets: 344\\n- Trust Score: 10\\n----------\\n- Title: My Dummy Test2\\n- Context7-compatible library ID: /kkkkkom/my_dummy_test2\\n- Description: \\n- Code Snippets: 10\\n----------\\n- Title: Jenkins Library\\n- Context7-compatible library ID: /phgermanov/jenkins-library\\n- Description: Jenkins shared library for Continuous Delivery pipelines.\\n- Code Snippets: 714\\n- Trust Score: 4\\n----------\\n- Title: Prism Library\\n- Context7-compatible library ID: /prismlibrary/prism-documentation\\n- Description: Prism is a framework for building loosely coupled, maintainable, and testable XAML applications in WPF, Windows 10 UWP, and Xamarin Forms.\\n- Code Snippets: 387\\n- Trust Score: 7.8\\n----------\\n- Title: Svelte Testing Library\\n- Context7-compatible library ID: /testing-library/svelte-testing-library\\n- Description: :chipmunk: Simple and complete Svelte DOM testing utilities that encourage good testing practices\\n- Code Snippets: 22\\n- Trust Score: 9.3\\n----------\\n- Title: My Dummy Test 50\\n- Context7-compatible library ID: /kkkkkom/my_dummy_test_50\\n- Description: \\n- Code Snippets: 43\\n----------\\n- Title: React Testing Library\\n- Context7-compatible library ID: /testing-library/react-testing-library\\n- Description: 🐐 Simple and complete React DOM testing utilities that encourage good testing practices.\\n- Code Snippets: 16\\n- Trust Score: 9.3\\n----------\\n- Title: Testing Library Jasmine DOM\\n- Context7-compatible library ID: /testing-library/jasmine-dom\\n- Description: 🦥 Custom Jasmine matchers to test the state of the DOM\\n- Code Snippets: 38\\n- Trust Score: 9.3\\n----------\\n- Title: DOM Testing Library\\n- Context7-compatible library ID: /vuetifyjs/dom-testing-library\\n- Description: Simple and complete DOM testing utilities that encourage good testing practices by querying the DOM in a way similar to how users find elements.\\n- Code Snippets: 32\\n- Trust Score: 8.9\\n----------\\n- Title: Mockafka-py\\n- Context7-compatible library ID: /alm0ra/mockafka-py\\n- Description: Mockafka is a Python library providing a fake, in-memory implementation of Kafka clients for testing, compatible with confluent-kafka-python and aiokafka.\\n- Code Snippets: 49\\n- Trust Score: 8.3\\n----------\\n- Title: Zen\\n- Context7-compatible library ID: /zen-lang/zen\\n- Description: Library for model driven systems\\n- Code Snippets: 7\\n- Trust Score: 5\\n----------\\n- Title: Aily Blockly Libraries\\n- Context7-compatible library ID: /ailyproject/aily-blockly-libraries\\n- Description: This repository collects and stores Aily Blockly libraries, providing guidelines for library development, private deployment, multilingual support, and testing.\\n- Code Snippets: 12\\n- Trust Score: 4.5\\n----------\\n- Title: DSPy Examples\\n- Context7-compatible library ID: /mbakgun/dspy-examples\\n- Description: This repository provides various examples demonstrating the usage of DSPy, a framework for programming language models with Python, enabling the creation of reliable, composable, and optimizable AI applications.\\n- Code Snippets: 7\\n- Trust Score: 8.4\\n----------\\n- Title: My Dummy Md\\n- Context7-compatible library ID: /kkkkkom/my_dummy_md\\n- Description: \\n- Code Snippets: 109\\n----------\\n- Title: Testing Library Jest DOM\\n- Context7-compatible library ID: /testing-library/jest-dom\\n- Description: :owl: Custom jest matchers to test the state of the DOM\\n- Code Snippets: 47\\n- Trust Score: 9.3\\n----------\\n- Title: Janitor\\n- Context7-compatible library ID: /howmanysmall/janitor\\n- Description: Janitor library.\\n- Code Snippets: 7\\n- Trust Score: 8.6\\n----------\\n- Title: Testcontainers Java\\n- Context7-compatible library ID: /testcontainers/testcontainers-java\\n- Description: Testcontainers is a Java library that supports JUnit tests, providing lightweight, throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container.\\n- Code Snippets: 388\\n- Trust Score: 8.7\\n- Versions: 1.21.2\\n----------\\n- Title: MockK (llmstxt)\\n- Context7-compatible library ID: /context7.com/llmstxt\\n- Description: MockK is a library for mocking in Kotlin, enabling powerful and flexible unit testing by simulating objects and behaviors.\\n- Code Snippets: 63\\n----------\\n- Title: Robot Framework SeleniumLibrary\\n- Context7-compatible library ID: /robotframework/seleniumlibrary\\n- Description: Web testing library for Robot Framework\\n- Code Snippets: 249\\n- Trust Score: 8.8\\n----------\\n- Title: PLAMS\\n- Context7-compatible library ID: /scm-nv/plams\\n- Description: Python Library for Automating Molecular Simulations\\n- Code Snippets: 1067\\n- Trust Score: 6.4\\n----------\\n- Title: Material Design Library\\n- Context7-compatible library ID: /navasmdc/materialdesignlibrary\\n- Description: A library for Android that provides Material Design components and widgets, including buttons, switches, progress indicators, and dialogs, with easy integration via Gradle.\\n- Code Snippets: 37\\n- Trust Score: 8.6\\n----------\\n- Title: Testcontainers Node\\n- Context7-compatible library ID: /testcontainers/testcontainers-node\\n- Description: Testcontainers is a NodeJS library that supports tests, providing lightweight, throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container.\\n- Code Snippets: 145\\n- Trust Score: 8.7\\n----------\\n- Title: Testcontainers for .NET\\n- Context7-compatible library ID: /testcontainers/testcontainers-dotnet\\n- Description: A library to support tests with throwaway instances of Docker containers for all compatible .NET Standard versions.\\n- Code Snippets: 188\\n- Trust Score: 8.7\\n----------\\n- Title: llm\\n- Context7-compatible library ID: /simonw/llm\\n- Description: A CLI tool and Python library for interacting with various Large Language Models, supporting remote APIs and local installations, with features for prompts, logging, embeddings, and tool execution.\\n- Code Snippets: 672\\n----------\\n- Title: ng-mocks\\n- Context7-compatible library ID: /help-me-mom/ng-mocks\\n- Description: Angular testing library for mocking components, directives, pipes, services and facilitating TestBed setup\\n- Code Snippets: 487\\n- Trust Score: 8.2\\n----------\\n- Title: Amazon SageMaker Examples\\n- Context7-compatible library ID: /aws/amazon-sagemaker-examples\\n- Description: Example Jupyter notebooks demonstrating how to build, train, and deploy machine learning models using Amazon SageMaker, covering a wide range of ML tasks and use cases.\\n- Code Snippets: 4961\\n- Trust Score: 9.6\\n----------\\n- Title: Minari\\n- Context7-compatible library ID: /websites/minari_farama\\n- Description: Minari is a dataset management library for reinforcement learning, providing tools for creating, storing, and using diverse datasets like D4RL and BabyAI.\\n- Code Snippets: 1457\\n- Trust Score: 7.5\\n----------\\n- Title: Chameleon Controls Library\\n- Context7-compatible library ID: /genexuslabs/chameleon-controls-library\\n- Description: A library of white-label, highly-customizable, and reusable web components built with Stencil.\\n- Code Snippets: 181\\n- Trust Score: 8.6\\n----------\\n- Title: Swarm\\n- Context7-compatible library ID: /openai/swarm\\n- Description: Swarm is an experimental and educational Python library for lightweight, controllable, and testable agent coordination and execution, featuring Agent abstractions and handoffs.\\n- Code Snippets: 29\\n- Trust Score: 9.1\\n----------\\n- Title: STUMPY\\n- Context7-compatible library ID: /stumpy-dev/stumpy\\n- Description: STUMPY is a powerful and scalable Python library for modern time series analysis\\n- Code Snippets: 112\\n- Trust Score: 5\"\n      }\n    ]\n  },\n  \"raw\": {\n    \"result\": {\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"Available Libraries (top matches):\\n\\nEach result includes:\\n- Library ID: Context7-compatible identifier (format: /org/project)\\n- Name: Library or package name\\n- Description: Short summary\\n- Code Snippets: Number of available code examples\\n- Trust Score: Authority indicator\\n- Versions: List of versions if available. Use one of those versions if and only if the user explicitly provides a version in their query.\\n\\nFor best results, select libraries based on name match, trust score, snippet coverage, and relevance to your use case.\\n\\n----------\\n\\n- Title: Dumi\\n- Context7-compatible library ID: /umijs/dumi\\n- Description: 📖 Static Site Generator for component library development\\n- Code Snippets: 159\\n- Trust Score: 8.2\\n----------\\n- Title: Testing Library\\n- Context7-compatible library ID: /websites/testing-library_com-docs\\n- Description: Testing Library is a family of packages for user-centric UI component testing. It helps you write maintainable tests by querying and interacting with DOM nodes, avoiding implementation details, and supporting various frameworks like React, Angular, and Vue.\\n- Code Snippets: 579\\n----------\\n- Title: My Dummy Test3\\n- Context7-compatible library ID: /kkkkkom/my_dummy_test3\\n- Description: \\n- Code Snippets: 72\\n----------\\n- Title: SMB Library\\n- Context7-compatible library ID: /talaloni/smblibrary\\n- Description: Free, Open Source, User-Mode SMB 1.0/CIFS, SMB 2.0, SMB 2.1 and SMB 3.0 server and client library\\n- Code Snippets: 16\\n- Trust Score: 8.2\\n----------\\n- Title: Blockly Samples\\n- Context7-compatible library ID: /google/blockly-samples\\n- Description: This repository contains plugins, codelabs, and examples that demonstrate how to use and extend the Blockly library.\\n- Code Snippets: 386\\n- Trust Score: 8.9\\n----------\\n- Title: Testing Library User Event\\n- Context7-compatible library ID: /testing-library/user-event\\n- Description: 🐕 Simulate user events\\n- Code Snippets: 7\\n- Trust Score: 9.3\\n----------\\n- Title: Placeholder API\\n- Context7-compatible library ID: /websites/placeholders_pb4_eu_dev\\n- Description: Placeholder API is a Java library for creating and parsing text placeholders, offering simplified text formatting for developers.\\n- Code Snippets: 30\\n- Trust Score: 7.5\\n----------\\n- Title: Testing Library\\n- Context7-compatible library ID: /testing-library/testing-library-docs\\n- Description: docs site for @testing-library/*\\n- Code Snippets: 499\\n- Trust Score: 9.3\\n----------\\n- Title: React Native Testing Library\\n- Context7-compatible library ID: /callstack/react-native-testing-library\\n- Description: Developer-friendly and complete React Native testing utilities that encourage good testing practices by simulating React Native runtime.\\n- Code Snippets: 344\\n- Trust Score: 10\\n----------\\n- Title: My Dummy Test2\\n- Context7-compatible library ID: /kkkkkom/my_dummy_test2\\n- Description: \\n- Code Snippets: 10\\n----------\\n- Title: Jenkins Library\\n- Context7-compatible library ID: /phgermanov/jenkins-library\\n- Description: Jenkins shared library for Continuous Delivery pipelines.\\n- Code Snippets: 714\\n- Trust Score: 4\\n----------\\n- Title: Prism Library\\n- Context7-compatible library ID: /prismlibrary/prism-documentation\\n- Description: Prism is a framework for building loosely coupled, maintainable, and testable XAML applications in WPF, Windows 10 UWP, and Xamarin Forms.\\n- Code Snippets: 387\\n- Trust Score: 7.8\\n----------\\n- Title: Svelte Testing Library\\n- Context7-compatible library ID: /testing-library/svelte-testing-library\\n- Description: :chipmunk: Simple and complete Svelte DOM testing utilities that encourage good testing practices\\n- Code Snippets: 22\\n- Trust Score: 9.3\\n----------\\n- Title: My Dummy Test 50\\n- Context7-compatible library ID: /kkkkkom/my_dummy_test_50\\n- Description: \\n- Code Snippets: 43\\n----------\\n- Title: React Testing Library\\n- Context7-compatible library ID: /testing-library/react-testing-library\\n- Description: 🐐 Simple and complete React DOM testing utilities that encourage good testing practices.\\n- Code Snippets: 16\\n- Trust Score: 9.3\\n----------\\n- Title: Testing Library Jasmine DOM\\n- Context7-compatible library ID: /testing-library/jasmine-dom\\n- Description: 🦥 Custom Jasmine matchers to test the state of the DOM\\n- Code Snippets: 38\\n- Trust Score: 9.3\\n----------\\n- Title: DOM Testing Library\\n- Context7-compatible library ID: /vuetifyjs/dom-testing-library\\n- Description: Simple and complete DOM testing utilities that encourage good testing practices by querying the DOM in a way similar to how users find elements.\\n- Code Snippets: 32\\n- Trust Score: 8.9\\n----------\\n- Title: Mockafka-py\\n- Context7-compatible library ID: /alm0ra/mockafka-py\\n- Description: Mockafka is a Python library providing a fake, in-memory implementation of Kafka clients for testing, compatible with confluent-kafka-python and aiokafka.\\n- Code Snippets: 49\\n- Trust Score: 8.3\\n----------\\n- Title: Zen\\n- Context7-compatible library ID: /zen-lang/zen\\n- Description: Library for model driven systems\\n- Code Snippets: 7\\n- Trust Score: 5\\n----------\\n- Title: Aily Blockly Libraries\\n- Context7-compatible library ID: /ailyproject/aily-blockly-libraries\\n- Description: This repository collects and stores Aily Blockly libraries, providing guidelines for library development, private deployment, multilingual support, and testing.\\n- Code Snippets: 12\\n- Trust Score: 4.5\\n----------\\n- Title: DSPy Examples\\n- Context7-compatible library ID: /mbakgun/dspy-examples\\n- Description: This repository provides various examples demonstrating the usage of DSPy, a framework for programming language models with Python, enabling the creation of reliable, composable, and optimizable AI applications.\\n- Code Snippets: 7\\n- Trust Score: 8.4\\n----------\\n- Title: My Dummy Md\\n- Context7-compatible library ID: /kkkkkom/my_dummy_md\\n- Description: \\n- Code Snippets: 109\\n----------\\n- Title: Testing Library Jest DOM\\n- Context7-compatible library ID: /testing-library/jest-dom\\n- Description: :owl: Custom jest matchers to test the state of the DOM\\n- Code Snippets: 47\\n- Trust Score: 9.3\\n----------\\n- Title: Janitor\\n- Context7-compatible library ID: /howmanysmall/janitor\\n- Description: Janitor library.\\n- Code Snippets: 7\\n- Trust Score: 8.6\\n----------\\n- Title: Testcontainers Java\\n- Context7-compatible library ID: /testcontainers/testcontainers-java\\n- Description: Testcontainers is a Java library that supports JUnit tests, providing lightweight, throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container.\\n- Code Snippets: 388\\n- Trust Score: 8.7\\n- Versions: 1.21.2\\n----------\\n- Title: MockK (llmstxt)\\n- Context7-compatible library ID: /context7.com/llmstxt\\n- Description: MockK is a library for mocking in Kotlin, enabling powerful and flexible unit testing by simulating objects and behaviors.\\n- Code Snippets: 63\\n----------\\n- Title: Robot Framework SeleniumLibrary\\n- Context7-compatible library ID: /robotframework/seleniumlibrary\\n- Description: Web testing library for Robot Framework\\n- Code Snippets: 249\\n- Trust Score: 8.8\\n----------\\n- Title: PLAMS\\n- Context7-compatible library ID: /scm-nv/plams\\n- Description: Python Library for Automating Molecular Simulations\\n- Code Snippets: 1067\\n- Trust Score: 6.4\\n----------\\n- Title: Material Design Library\\n- Context7-compatible library ID: /navasmdc/materialdesignlibrary\\n- Description: A library for Android that provides Material Design components and widgets, including buttons, switches, progress indicators, and dialogs, with easy integration via Gradle.\\n- Code Snippets: 37\\n- Trust Score: 8.6\\n----------\\n- Title: Testcontainers Node\\n- Context7-compatible library ID: /testcontainers/testcontainers-node\\n- Description: Testcontainers is a NodeJS library that supports tests, providing lightweight, throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container.\\n- Code Snippets: 145\\n- Trust Score: 8.7\\n----------\\n- Title: Testcontainers for .NET\\n- Context7-compatible library ID: /testcontainers/testcontainers-dotnet\\n- Description: A library to support tests with throwaway instances of Docker containers for all compatible .NET Standard versions.\\n- Code Snippets: 188\\n- Trust Score: 8.7\\n----------\\n- Title: llm\\n- Context7-compatible library ID: /simonw/llm\\n- Description: A CLI tool and Python library for interacting with various Large Language Models, supporting remote APIs and local installations, with features for prompts, logging, embeddings, and tool execution.\\n- Code Snippets: 672\\n----------\\n- Title: ng-mocks\\n- Context7-compatible library ID: /help-me-mom/ng-mocks\\n- Description: Angular testing library for mocking components, directives, pipes, services and facilitating TestBed setup\\n- Code Snippets: 487\\n- Trust Score: 8.2\\n----------\\n- Title: Amazon SageMaker Examples\\n- Context7-compatible library ID: /aws/amazon-sagemaker-examples\\n- Description: Example Jupyter notebooks demonstrating how to build, train, and deploy machine learning models using Amazon SageMaker, covering a wide range of ML tasks and use cases.\\n- Code Snippets: 4961\\n- Trust Score: 9.6\\n----------\\n- Title: Minari\\n- Context7-compatible library ID: /websites/minari_farama\\n- Description: Minari is a dataset management library for reinforcement learning, providing tools for creating, storing, and using diverse datasets like D4RL and BabyAI.\\n- Code Snippets: 1457\\n- Trust Score: 7.5\\n----------\\n- Title: Chameleon Controls Library\\n- Context7-compatible library ID: /genexuslabs/chameleon-controls-library\\n- Description: A library of white-label, highly-customizable, and reusable web components built with Stencil.\\n- Code Snippets: 181\\n- Trust Score: 8.6\\n----------\\n- Title: Swarm\\n- Context7-compatible library ID: /openai/swarm\\n- Description: Swarm is an experimental and educational Python library for lightweight, controllable, and testable agent coordination and execution, featuring Agent abstractions and handoffs.\\n- Code Snippets: 29\\n- Trust Score: 9.1\\n----------\\n- Title: STUMPY\\n- Context7-compatible library ID: /stumpy-dev/stumpy\\n- Description: STUMPY is a powerful and scalable Python library for modern time series analysis\\n- Code Snippets: 112\\n- Trust Score: 5\"\n        }\n      ]\n    },\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1007070\n  }\n}\n\n请分析这个测试是否通过，并提供详细分析。\n\nmcp_test_validator: ```json\n{\n  \"status\": \"fail\",\n  \"confidence\": 0.95,\n  \"analysis\": \"测试未通过，因为测试用例的期望结果类型是 'error'，并且期望内容是明确提示无法找到匹配的库或建议查询优化。然而，实际响应显示 'success': true，并返回了大量库的列表，这表明工具没有按照预期返回错误信息。虽然工具成功响应且返回了结构化数据，但结果不符合预期的错误类型，因此测试失败。\",\n  \"issues\": [\n    \"实际响应与期望结果不符：期望返回错误信息，但实际返回了成功状态并列出多个库。\",\n    \"工具未对输入参数 'dummy-library' 进行有效验证或提示优化建议。\",\n    \"响应虽然结构完整，但未能正确处理未找到匹配库的情况。\"\n  ],\n  \"recommendations\": [\n    \"检查 resolve-library-id 工具的逻辑，确保在没有明确匹配时返回预期的错误信息。\",\n    \"优化查询逻辑，当输入的库名不明确或无法匹配时，提供清晰的提示信息，如建议优化查询关键词。\",\n    \"确保工具在不同输入情况下返回的结果类型与测试期望一致，提升错误处理能力。\"\n  ]\n}\n```\nuser: \n请分析以下MCP工具测试结果:\n\n测试用例名称: 解析有效库ID测试\n测试描述: 测试resolve-library-id工具是否能正确解析一个常见库（如react）的Context7兼容库ID。\n调用工具: resolve-library-id\n输入参数: {\"libraryName\": \"react\"}\n期望结果类型: success\n期望结果内容: 返回类似 '/facebook/react' 的库ID以及选择原因的描述。\n执行时间: 2.722秒\n\n实际响应:\n{\n  \"success\": true,\n  \"result\": {\n    \"content\": [\n      {\n        \"type\": \"text\",\n        \"text\": \"Available Libraries (top matches):\\n\\nEach result includes:\\n- Library ID: Context7-compatible identifier (format: /org/project)\\n- Name: Library or package name\\n- Description: Short summary\\n- Code Snippets: Number of available code examples\\n- Trust Score: Authority indicator\\n- Versions: List of versions if available. Use one of those versions if and only if the user explicitly provides a version in their query.\\n\\nFor best results, select libraries based on name match, trust score, snippet coverage, and relevance to your use case.\\n\\n----------\\n\\n- Title: React\\n- Context7-compatible library ID: /websites/16_reactjs\\n- Description: React is a JavaScript library for building user interfaces, designed for gradual adoption and creating interactive web applications.\\n- Code Snippets: 650\\n- Trust Score: 7.5\\n----------\\n- Title: React\\n- Context7-compatible library ID: /websites/fr_legacy_reactjs\\n- Description: React is a JavaScript library for building user interfaces (UI).\\n- Code Snippets: 256\\n- Trust Score: 7.5\\n----------\\n- Title: React\\n- Context7-compatible library ID: /websites/react_dev\\n- Description: React is a JavaScript library for building user interfaces. It allows developers to create interactive web and native applications using reusable components, enabling efficient and scalable UI development.\\n- Code Snippets: 4077\\n- Trust Score: 8\\n----------\\n- Title: Keep React\\n- Context7-compatible library ID: /staticmania/keep-react\\n- Description: Keep React is an open-source component library built on Tailwind CSS and React.js, offering pre-designed UI components to streamline the creation of modern, responsive web applications.\\n- Code Snippets: 216\\n----------\\n- Title: React Chartjs 2\\n- Context7-compatible library ID: /reactchartjs/react-chartjs-2\\n- Description: React components for Chart.js, the most popular charting library, supporting Chart.js v4 and v3.\\n- Code Snippets: 70\\n- Trust Score: 7.5\\n----------\\n- Title: Syncfusion React UI Components\\n- Context7-compatible library ID: /syncfusion/ej2-react-ui-components\\n- Description: Syncfusion's React UI Components library offers over 70 lightweight, responsive, modular, and touch-friendly components for building modern applications.\\n- Code Snippets: 520\\n- Trust Score: 8.7\\n----------\\n- Title: React Leaflet\\n- Context7-compatible library ID: /websites/react-leaflet_js\\n- Description: Provides React components for building interactive maps using the Leaflet JavaScript library.\\n- Code Snippets: 428\\n- Trust Score: 7.5\\n----------\\n- Title: Xiping React Components\\n- Context7-compatible library ID: /llmstxt/xiping-react-components_vercel_app-llms.txt\\n- Description: A feature-rich React component library offering over 20 modern UI components for animations, data visualization, text manipulation, and more, built with React 19+, TypeScript, and Storybook documentation.\\n- Code Snippets: 3\\n- Trust Score: 8\\n----------\\n- Title: React Connect.js\\n- Context7-compatible library ID: /stripe/react-connect-js\\n- Description: React Connect.js provides React components that act as a thin wrapper around Connect.js embedded components, simplifying their integration into React applications by managing state and lifecycle.\\n- Code Snippets: 2\\n- Trust Score: 8.9\\n----------\\n- Title: React Stripe.js\\n- Context7-compatible library ID: /stripe/react-stripe-js\\n- Description: React Stripe.js provides React components for Stripe.js and Elements, enabling developers to easily integrate Stripe's payment processing capabilities into their React applications.\\n- Code Snippets: 11\\n- Trust Score: 8.9\\n----------\\n- Title: React Docgen\\n- Context7-compatible library ID: /reactjs/react-docgen\\n- Description: React-docgen is a customizable library that extracts information from React components and provides it in a structured, machine-readable format for documentation generation.\\n- Code Snippets: 101\\n- Trust Score: 9\\n----------\\n- Title: React Canvas Confetti\\n- Context7-compatible library ID: /ulitcos/react-canvas-confetti\\n- Description: React component for canvas-confetti library\\n- Code Snippets: 5\\n- Trust Score: 5.8\\n----------\\n- Title: React\\n- Context7-compatible library ID: /reactjs/react.dev\\n- Description: React.dev is the official documentation website for React, a JavaScript library for building user interfaces, providing guides, API references, and tutorials.\\n- Code Snippets: 2777\\n- Trust Score: 10\\n----------\\n- Title: React Codemirror\\n- Context7-compatible library ID: /uiwjs/react-codemirror\\n- Description: CodeMirror 6 component for React. @codemirror https://uiwjs.github.io/react-codemirror/\\n- Code Snippets: 309\\n- Trust Score: 9.9\\n----------\\n- Title: TalkJS React\\n- Context7-compatible library ID: /talkjs/talkjs-react\\n- Description: React components for TalkJS\\n- Code Snippets: 3\\n- Trust Score: 7.9\\n----------\\n- Title: React Vant\\n- Context7-compatible library ID: /3lang3/react-vant\\n- Description: React Vant is a mobile component library based on the React framework, inspired by Vant, offering over 70 high-quality components with features like small size, TypeScript support, theme customization, and SSR compatibility.\\n- Code Snippets: 465\\n- Trust Score: 8.9\\n----------\\n- Title: React Flow\\n- Context7-compatible library ID: /websites/reactflow_dev\\n- Description: A customizable React component library for building interactive node-based editors and diagrams, offering features like dragging, zooming, and panning.\\n- Code Snippets: 2305\\n- Trust Score: 7.5\\n----------\\n- Title: React Activation\\n- Context7-compatible library ID: /cjy0208/react-activation\\n- Description: React Activation is a library that implements Vue's <keep-alive /> functionality for React, enabling component state persistence and caching.\\n- Code Snippets: 26\\n- Trust Score: 9.1\\n----------\\n- Title: Cloud React\\n- Context7-compatible library ID: /shuyunff2e/cloud-react\\n- Description: Cloud React is a React component library offering a rich set of enterprise-grade UI components and solutions, built with a focus on design, performance, and customization.\\n- Code Snippets: 247\\n- Trust Score: 5.7\\n- Versions: v2.0.2\\n----------\\n- Title: React\\n- Context7-compatible library ID: /facebook/react\\n- Description: The library for web and native user interfaces.\\n- Code Snippets: 2864\\n- Trust Score: 9.2\\n- Versions: v18_3_1\\n----------\\n- Title: KPC\\n- Context7-compatible library ID: /ksc-fe/kpc\\n- Description: A UI Components Library for Intact, Vue, React and Angular.\\n- Code Snippets: 983\\n- Trust Score: 5.9\\n----------\\n- Title: Rive React\\n- Context7-compatible library ID: /rive-app/rive-react\\n- Description: A React runtime library for Rive, providing components and hooks for integrating Rive animations into React applications.\\n- Code Snippets: 8\\n- Trust Score: 9.3\\n----------\\n- Title: React ABC\\n- Context7-compatible library ID: /fuhton/react-abc\\n- Description: A React component for displaying ABC notation, wrapping the Abc.js library for use in React applications.\\n- Code Snippets: 13\\n- Trust Score: 5.8\\n----------\\n- Title: Kubit React Components\\n- Context7-compatible library ID: /kubit-ui/kubit-react-components\\n- Description: Kubit React Components is a customizable, accessible library of React web components, designed to enhance your application's user experience.\\n- Code Snippets: 9\\n- Trust Score: 5.9\\n----------\\n- Title: React Plotly.js\\n- Context7-compatible library ID: /plotly/react-plotly.js\\n- Description: A React component for Plotly.js, enabling the creation of interactive charts and visualizations within React applications.\\n- Code Snippets: 9\\n- Trust Score: 8\\n----------\\n- Title: wavesurfer.js React\\n- Context7-compatible library ID: /katspaugh/wavesurfer-react\\n- Description: A React component and hook for wavesurfer.js, simplifying the integration of audio waveform visualization and playback into React applications with familiar options and event handling.\\n- Code Snippets: 4\\n- Trust Score: 8.2\\n----------\\n- Title: React CSV\\n- Context7-compatible library ID: /react-csv/react-csv\\n- Description: React CSV is a library that provides components for generating and downloading CSV files from React applications, supporting various data formats and custom headers.\\n- Code Snippets: 31\\n- Trust Score: 4.6\\n----------\\n- Title: Core DS Core Components\\n- Context7-compatible library ID: /core-ds/core-components\\n- Description: A React component library for building web interfaces, offering a collection of reusable UI elements with comprehensive documentation and a sandbox environment.\\n- Code Snippets: 243\\n- Trust Score: 6.6\\n----------\\n- Title: React\\n- Context7-compatible library ID: /jeanduplessis/react.dev\\n- Description: This repository contains the source code and documentation for the official React website, react.dev, which is built using Next.js.\\n- Code Snippets: 2562\\n- Trust Score: 5.4\\n----------\\n- Title: LiveKit Components JS\\n- Context7-compatible library ID: /livekit/components-js\\n- Description: Official open source React components and examples for building with LiveKit.\\n- Code Snippets: 142\\n- Trust Score: 9.3\\n----------\\n- Title: React Google Maps\\n- Context7-compatible library ID: /visgl/react-google-maps\\n- Description: A TypeScript/JavaScript library providing React components and hooks to integrate the Google Maps JavaScript API into React applications, enabling map creation, marker placement, and use of various Maps API services and libraries.\\n- Code Snippets: 218\\n- Trust Score: 7.7\\n----------\\n- Title: React Rainbow Components\\n- Context7-compatible library ID: /nexxtway/react-rainbow\\n- Description: React Rainbow is a collection of components designed to help developers build applications quickly, offering over 90 components with features like i18n support, accessibility, and TypeScript typing.\\n- Code Snippets: 578\\n- Trust Score: 7.3\\n----------\\n- Title: React Markdown\\n- Context7-compatible library ID: /remarkjs/react-markdown\\n- Description: A React component that safely renders markdown strings into React elements, supporting custom components and plugins for extended functionality.\\n- Code Snippets: 16\\n- Trust Score: 8.9\\n----------\\n- Title: hCaptcha React\\n- Context7-compatible library ID: /hcaptcha/react-hcaptcha\\n- Description: A React component library for integrating hCaptcha, a privacy-focused alternative to reCAPTCHA, into web applications.\\n- Code Snippets: 9\\n- Trust Score: 8.7\\n----------\\n- Title: React95\\n- Context7-compatible library ID: /react95/react95\\n- Description: React95 is a component library that recreates the iconic user interface design of Windows 95 for React applications.\\n- Code Snippets: 18\\n- Trust Score: 7.8\\n----------\\n- Title: Zent\\n- Context7-compatible library ID: /youzan/zent\\n- Description: Zent is a React component library developed at Youzan, offering a collection of essential UI components and domain-specific components to make React development faster and simpler.\\n- Code Snippets: 829\\n- Trust Score: 9.5\\n----------\\n- Title: React Paystack\\n- Context7-compatible library ID: /iamraphson/react-paystack\\n- Description: ReactJS library for implementing paystack payment gateway\\n- Code Snippets: 7\\n- Trust Score: 9.1\\n----------\\n- Title: React Remark\\n- Context7-compatible library ID: /remarkjs/react-remark\\n- Description: React Remark provides React hooks and components for rendering Markdown into React elements using the remark ecosystem.\\n- Code Snippets: 9\\n- Trust Score: 8.9\\n----------\\n- Title: React Select\\n- Context7-compatible library ID: /jedwatson/react-select\\n- Description: React Select is a flexible and extensible select control for React applications, offering customizable styling, component injection, and support for advanced features like option groups and portal support.\\n- Code Snippets: 16\\n- Trust Score: 8.1\\n----------\\n- Title: Akool React SDK\\n- Context7-compatible library ID: /akool-rinku/akool-react-sdk\\n- Description: A React component library for integrating AI-powered video chat avatars into web applications, featuring real-time streaming, customizable personalities, and WebSocket communication.\\n- Code Snippets: 10\\n- Trust Score: 2.2\"\n      }\n    ]\n  },\n  \"raw\": {\n    \"result\": {\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"Available Libraries (top matches):\\n\\nEach result includes:\\n- Library ID: Context7-compatible identifier (format: /org/project)\\n- Name: Library or package name\\n- Description: Short summary\\n- Code Snippets: Number of available code examples\\n- Trust Score: Authority indicator\\n- Versions: List of versions if available. Use one of those versions if and only if the user explicitly provides a version in their query.\\n\\nFor best results, select libraries based on name match, trust score, snippet coverage, and relevance to your use case.\\n\\n----------\\n\\n- Title: React\\n- Context7-compatible library ID: /websites/16_reactjs\\n- Description: React is a JavaScript library for building user interfaces, designed for gradual adoption and creating interactive web applications.\\n- Code Snippets: 650\\n- Trust Score: 7.5\\n----------\\n- Title: React\\n- Context7-compatible library ID: /websites/fr_legacy_reactjs\\n- Description: React is a JavaScript library for building user interfaces (UI).\\n- Code Snippets: 256\\n- Trust Score: 7.5\\n----------\\n- Title: React\\n- Context7-compatible library ID: /websites/react_dev\\n- Description: React is a JavaScript library for building user interfaces. It allows developers to create interactive web and native applications using reusable components, enabling efficient and scalable UI development.\\n- Code Snippets: 4077\\n- Trust Score: 8\\n----------\\n- Title: Keep React\\n- Context7-compatible library ID: /staticmania/keep-react\\n- Description: Keep React is an open-source component library built on Tailwind CSS and React.js, offering pre-designed UI components to streamline the creation of modern, responsive web applications.\\n- Code Snippets: 216\\n----------\\n- Title: React Chartjs 2\\n- Context7-compatible library ID: /reactchartjs/react-chartjs-2\\n- Description: React components for Chart.js, the most popular charting library, supporting Chart.js v4 and v3.\\n- Code Snippets: 70\\n- Trust Score: 7.5\\n----------\\n- Title: Syncfusion React UI Components\\n- Context7-compatible library ID: /syncfusion/ej2-react-ui-components\\n- Description: Syncfusion's React UI Components library offers over 70 lightweight, responsive, modular, and touch-friendly components for building modern applications.\\n- Code Snippets: 520\\n- Trust Score: 8.7\\n----------\\n- Title: React Leaflet\\n- Context7-compatible library ID: /websites/react-leaflet_js\\n- Description: Provides React components for building interactive maps using the Leaflet JavaScript library.\\n- Code Snippets: 428\\n- Trust Score: 7.5\\n----------\\n- Title: Xiping React Components\\n- Context7-compatible library ID: /llmstxt/xiping-react-components_vercel_app-llms.txt\\n- Description: A feature-rich React component library offering over 20 modern UI components for animations, data visualization, text manipulation, and more, built with React 19+, TypeScript, and Storybook documentation.\\n- Code Snippets: 3\\n- Trust Score: 8\\n----------\\n- Title: React Connect.js\\n- Context7-compatible library ID: /stripe/react-connect-js\\n- Description: React Connect.js provides React components that act as a thin wrapper around Connect.js embedded components, simplifying their integration into React applications by managing state and lifecycle.\\n- Code Snippets: 2\\n- Trust Score: 8.9\\n----------\\n- Title: React Stripe.js\\n- Context7-compatible library ID: /stripe/react-stripe-js\\n- Description: React Stripe.js provides React components for Stripe.js and Elements, enabling developers to easily integrate Stripe's payment processing capabilities into their React applications.\\n- Code Snippets: 11\\n- Trust Score: 8.9\\n----------\\n- Title: React Docgen\\n- Context7-compatible library ID: /reactjs/react-docgen\\n- Description: React-docgen is a customizable library that extracts information from React components and provides it in a structured, machine-readable format for documentation generation.\\n- Code Snippets: 101\\n- Trust Score: 9\\n----------\\n- Title: React Canvas Confetti\\n- Context7-compatible library ID: /ulitcos/react-canvas-confetti\\n- Description: React component for canvas-confetti library\\n- Code Snippets: 5\\n- Trust Score: 5.8\\n----------\\n- Title: React\\n- Context7-compatible library ID: /reactjs/react.dev\\n- Description: React.dev is the official documentation website for React, a JavaScript library for building user interfaces, providing guides, API references, and tutorials.\\n- Code Snippets: 2777\\n- Trust Score: 10\\n----------\\n- Title: React Codemirror\\n- Context7-compatible library ID: /uiwjs/react-codemirror\\n- Description: CodeMirror 6 component for React. @codemirror https://uiwjs.github.io/react-codemirror/\\n- Code Snippets: 309\\n- Trust Score: 9.9\\n----------\\n- Title: TalkJS React\\n- Context7-compatible library ID: /talkjs/talkjs-react\\n- Description: React components for TalkJS\\n- Code Snippets: 3\\n- Trust Score: 7.9\\n----------\\n- Title: React Vant\\n- Context7-compatible library ID: /3lang3/react-vant\\n- Description: React Vant is a mobile component library based on the React framework, inspired by Vant, offering over 70 high-quality components with features like small size, TypeScript support, theme customization, and SSR compatibility.\\n- Code Snippets: 465\\n- Trust Score: 8.9\\n----------\\n- Title: React Flow\\n- Context7-compatible library ID: /websites/reactflow_dev\\n- Description: A customizable React component library for building interactive node-based editors and diagrams, offering features like dragging, zooming, and panning.\\n- Code Snippets: 2305\\n- Trust Score: 7.5\\n----------\\n- Title: React Activation\\n- Context7-compatible library ID: /cjy0208/react-activation\\n- Description: React Activation is a library that implements Vue's <keep-alive /> functionality for React, enabling component state persistence and caching.\\n- Code Snippets: 26\\n- Trust Score: 9.1\\n----------\\n- Title: Cloud React\\n- Context7-compatible library ID: /shuyunff2e/cloud-react\\n- Description: Cloud React is a React component library offering a rich set of enterprise-grade UI components and solutions, built with a focus on design, performance, and customization.\\n- Code Snippets: 247\\n- Trust Score: 5.7\\n- Versions: v2.0.2\\n----------\\n- Title: React\\n- Context7-compatible library ID: /facebook/react\\n- Description: The library for web and native user interfaces.\\n- Code Snippets: 2864\\n- Trust Score: 9.2\\n- Versions: v18_3_1\\n----------\\n- Title: KPC\\n- Context7-compatible library ID: /ksc-fe/kpc\\n- Description: A UI Components Library for Intact, Vue, React and Angular.\\n- Code Snippets: 983\\n- Trust Score: 5.9\\n----------\\n- Title: Rive React\\n- Context7-compatible library ID: /rive-app/rive-react\\n- Description: A React runtime library for Rive, providing components and hooks for integrating Rive animations into React applications.\\n- Code Snippets: 8\\n- Trust Score: 9.3\\n----------\\n- Title: React ABC\\n- Context7-compatible library ID: /fuhton/react-abc\\n- Description: A React component for displaying ABC notation, wrapping the Abc.js library for use in React applications.\\n- Code Snippets: 13\\n- Trust Score: 5.8\\n----------\\n- Title: Kubit React Components\\n- Context7-compatible library ID: /kubit-ui/kubit-react-components\\n- Description: Kubit React Components is a customizable, accessible library of React web components, designed to enhance your application's user experience.\\n- Code Snippets: 9\\n- Trust Score: 5.9\\n----------\\n- Title: React Plotly.js\\n- Context7-compatible library ID: /plotly/react-plotly.js\\n- Description: A React component for Plotly.js, enabling the creation of interactive charts and visualizations within React applications.\\n- Code Snippets: 9\\n- Trust Score: 8\\n----------\\n- Title: wavesurfer.js React\\n- Context7-compatible library ID: /katspaugh/wavesurfer-react\\n- Description: A React component and hook for wavesurfer.js, simplifying the integration of audio waveform visualization and playback into React applications with familiar options and event handling.\\n- Code Snippets: 4\\n- Trust Score: 8.2\\n----------\\n- Title: React CSV\\n- Context7-compatible library ID: /react-csv/react-csv\\n- Description: React CSV is a library that provides components for generating and downloading CSV files from React applications, supporting various data formats and custom headers.\\n- Code Snippets: 31\\n- Trust Score: 4.6\\n----------\\n- Title: Core DS Core Components\\n- Context7-compatible library ID: /core-ds/core-components\\n- Description: A React component library for building web interfaces, offering a collection of reusable UI elements with comprehensive documentation and a sandbox environment.\\n- Code Snippets: 243\\n- Trust Score: 6.6\\n----------\\n- Title: React\\n- Context7-compatible library ID: /jeanduplessis/react.dev\\n- Description: This repository contains the source code and documentation for the official React website, react.dev, which is built using Next.js.\\n- Code Snippets: 2562\\n- Trust Score: 5.4\\n----------\\n- Title: LiveKit Components JS\\n- Context7-compatible library ID: /livekit/components-js\\n- Description: Official open source React components and examples for building with LiveKit.\\n- Code Snippets: 142\\n- Trust Score: 9.3\\n----------\\n- Title: React Google Maps\\n- Context7-compatible library ID: /visgl/react-google-maps\\n- Description: A TypeScript/JavaScript library providing React components and hooks to integrate the Google Maps JavaScript API into React applications, enabling map creation, marker placement, and use of various Maps API services and libraries.\\n- Code Snippets: 218\\n- Trust Score: 7.7\\n----------\\n- Title: React Rainbow Components\\n- Context7-compatible library ID: /nexxtway/react-rainbow\\n- Description: React Rainbow is a collection of components designed to help developers build applications quickly, offering over 90 components with features like i18n support, accessibility, and TypeScript typing.\\n- Code Snippets: 578\\n- Trust Score: 7.3\\n----------\\n- Title: React Markdown\\n- Context7-compatible library ID: /remarkjs/react-markdown\\n- Description: A React component that safely renders markdown strings into React elements, supporting custom components and plugins for extended functionality.\\n- Code Snippets: 16\\n- Trust Score: 8.9\\n----------\\n- Title: hCaptcha React\\n- Context7-compatible library ID: /hcaptcha/react-hcaptcha\\n- Description: A React component library for integrating hCaptcha, a privacy-focused alternative to reCAPTCHA, into web applications.\\n- Code Snippets: 9\\n- Trust Score: 8.7\\n----------\\n- Title: React95\\n- Context7-compatible library ID: /react95/react95\\n- Description: React95 is a component library that recreates the iconic user interface design of Windows 95 for React applications.\\n- Code Snippets: 18\\n- Trust Score: 7.8\\n----------\\n- Title: Zent\\n- Context7-compatible library ID: /youzan/zent\\n- Description: Zent is a React component library developed at Youzan, offering a collection of essential UI components and domain-specific components to make React development faster and simpler.\\n- Code Snippets: 829\\n- Trust Score: 9.5\\n----------\\n- Title: React Paystack\\n- Context7-compatible library ID: /iamraphson/react-paystack\\n- Description: ReactJS library for implementing paystack payment gateway\\n- Code Snippets: 7\\n- Trust Score: 9.1\\n----------\\n- Title: React Remark\\n- Context7-compatible library ID: /remarkjs/react-remark\\n- Description: React Remark provides React hooks and components for rendering Markdown into React elements using the remark ecosystem.\\n- Code Snippets: 9\\n- Trust Score: 8.9\\n----------\\n- Title: React Select\\n- Context7-compatible library ID: /jedwatson/react-select\\n- Description: React Select is a flexible and extensible select control for React applications, offering customizable styling, component injection, and support for advanced features like option groups and portal support.\\n- Code Snippets: 16\\n- Trust Score: 8.1\\n----------\\n- Title: Akool React SDK\\n- Context7-compatible library ID: /akool-rinku/akool-react-sdk\\n- Description: A React component library for integrating AI-powered video chat avatars into web applications, featuring real-time streaming, customizable personalities, and WebSocket communication.\\n- Code Snippets: 10\\n- Trust Score: 2.2\"\n        }\n      ]\n    },\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1017960\n  }\n}\n\n请分析这个测试是否通过，并提供详细分析。\n\nmcp_test_validator: ```json\n{\n  \"status\": \"pass\",\n  \"confidence\": 0.98,\n  \"analysis\": \"测试通过。工具成功响应了对库名 'react' 的查询，返回了多个匹配的库信息，其中包含期望的 '/facebook/react' 库，并附带了描述信息。虽然响应格式是列表形式而非单一结果，但包含了正确的库ID、描述和代码片段等关键信息，符合工具设计的预期行为。因此，测试结果符合 'success' 类型的期望。\",\n  \"issues\": [\n    \"返回结果中包含多个 'React' 条目（如 /facebook/react、/reactjs/react.dev），可能需要进一步优化查询逻辑以优先展示官方或最权威的库。\",\n    \"未明确说明为何多个 React 库的 Trust Score 高于官方文档库（如某些第三方组件库 Trust Score 更高）。\",\n    \"响应内容较多，可能影响性能或用户体验，建议支持分页或更细粒度的过滤机制。\"\n  ],\n  \"recommendations\": [\n    \"优化查询逻辑，确保在多个匹配项中优先展示最权威或最常用的库（如 /facebook/react）。\",\n    \"增加对结果排序的控制，例如根据 Trust Score 或 Code Snippets 数量进行排序。\",\n    \"提供分页或限制返回结果数量的机制，提升响应效率和用户体验。\",\n    \"在响应中增加推荐理由，例如为何某个库被列为首选，提升用户对结果的信任度。\"\n  ]\n}\n```\nuser: \n请分析以下MCP工具测试结果:\n\n测试用例名称: 获取库文档测试\n测试描述: 使用resolve-library-id返回的库ID调用get-library-docs，验证文档是否能成功获取。\n调用工具: get-library-docs\n输入参数: {\"context7CompatibleLibraryID\": \"/facebook/react\", \"topic\": \"hooks\", \"tokens\": 10000}\n期望结果类型: success\n期望结果内容: 返回关于React hooks的最新文档内容。\n执行时间: 2.704秒\n\n实际响应:\n{\n  \"success\": true,\n  \"result\": {\n    \"content\": [\n      {\n        \"type\": \"text\",\n        \"text\": \"========================\\nCODE SNIPPETS\\n========================\\nTITLE: Custom Hook Calling Other Hooks\\nDESCRIPTION: This snippet demonstrates a custom React hook `useHook` that calls two other hypothetical hooks, `useHook1` and `useHook2`. This is a valid pattern in React.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-23dc7fffde57.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Valid because hooks can call hooks.\\nfunction useHook() {\\n  return useHook1() + useHook2();\\n}\\n\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call Example\\nDESCRIPTION: This JavaScript code snippet demonstrates an invalid usage of React Hooks. Hooks like `useConditionalHook` are called inside a function expression (`ComponentWithConditionalHook`), which violates the 'Rules of Hooks'. This pattern is disallowed because hooks must be called at the top level of a function component or a custom hook.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid.invalid-rules-of-hooks-d842d36db450.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction createComponent() {\\n  return function ComponentWithConditionalHook() {\\n    if (cond) {\\n      useConditionalHook();\\n    }\\n  };\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hook Definitions\\nDESCRIPTION: Illustrates multiple valid ways to define React hooks, such as function declarations, arrow functions, and assignments within object destructuring. It highlights that hooks can call other hooks like useState.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.bail.rules-of-hooks-e0a5db3ae21e.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// @skip\\n// Unsupported input\\n\\n// Valid because hooks can call hooks.\\nfunction useHook() {\\n  useState();\\n}\\n\\nconst whatever = function useHook() {\\n  useState();\\n};\\n\\nconst useHook1 = () => {\\n  useState();\\n};\\n\\nlet useHook2 = () => {\\n  return useState();\\n};\\nuseHook2 = () => {\\n  useState();\\n};\\n\\n({\\n  useHook: () => {\\n    useState();\\n  },\\n});\\n({\\n  useHook() {\\n    useState();\\n  },\\n});\\nconst {\\n  useHook3 = () => {\\n    useState();\\n  },\\n} = {};\\n({\\n  useHook = () => {\\n    useState();\\n  },\\n} = {});\\nNamespace.useHook = () => {\\n  useState();\\n};\\n\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Custom Hook Usage\\nDESCRIPTION: This snippet shows a custom React hook `useFoo` that utilizes another hook `useVideoPlayer`. It illustrates a common pitfall where a hook's return value is treated as a hook itself, leading to errors.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-from-hook-return.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction useFoo({data}) {\\n  const useMedia = useVideoPlayer();\\n  const foo = useMedia();\\n  return foo;\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Custom Hook Calling Other Hooks\\nDESCRIPTION: Demonstrates a custom React hook (`useHook`) that calls two other custom hooks (`useHook1` and `useHook2`). This is a valid pattern in React.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-9d7879272ff6.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Valid because hooks can call hooks.\\nfunction useHook() {\\n  return useHook1(useHook2());\\n}\\n\\n```\\n\\n----------------------------------------\\n\\nTITLE: Custom Hook Using Another Hook\\nDESCRIPTION: This snippet demonstrates a valid custom React hook named `useHookWithHook` that calls another hook, `useHook`. This is a common pattern in React for building reusable logic.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-844a496db20b.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Valid because hooks can use hooks.\\nfunction useHookWithHook() {\\n  useHook();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Conditional Hook Reference Violation in React\\nDESCRIPTION: This snippet demonstrates a violation of the React rule that states hooks must be called and cannot be referenced as normal values. The `useGetUser` hook is conditionally assigned to a variable `getUser`, which is then called. This is an invalid pattern because hooks should always be called directly within the component body or other hooks, not assigned to variables conditionally.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-call-phi-possibly-hook.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component(props) {\\n  // This is a violation of using a hook as a normal value rule:\\n  const getUser = props.cond ? useGetUser : emptyFunction;\\n\\n  // Ideally we would report a \\\"conditional hook call\\\" error here.\\n  // It's an unconditional call, but the value may or may not be a hook.\\n  // TODO: report a conditional hook call error here\\n  return getUser();\\n\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Dynamic Hook Usage in React\\nDESCRIPTION: This snippet demonstrates an incorrect way to use React hooks by assigning a hook's return value to a variable and then calling it. React's rules of hooks state that hooks must be called in the same order and on the same conditions on every render. Assigning a hook's result to a variable that might change can lead to this error.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-dynamic-hook-via-hooklike-local.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component() {\\n  const someFunction = useContext(FooContext);\\n  const useOhItsNamedLikeAHookNow = someFunction;\\n  useOhItsNamedLikeAHookNow();\\n}\\n```\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nError: Hooks must be the same function on every render, but this value may change over time to a different function. See https://react.dev/reference/rules/react-calls-components-and-hooks#dont-dynamically-use-hooks\\n\\nerror.invalid-dynamic-hook-via-hooklike-local.ts:4:2\\n  2 |\\n  3 |   const someFunction = useContext(FooContext);\\n  4 |   const useOhItsNamedLikeAHookNow = someFunction;\\n> 5 |   useOhItsNamedLikeAHookNow();\\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^^ Hooks must be the same function on every render, but this value may change over time to a different function. See https://react.dev/reference/rules/react-calls-components-and-hooks#dont-dynamically-use-hooks\\n  6 |\\n  7 | }\\n```\\n\\n----------------------------------------\\n\\nTITLE: Create React Hook\\nDESCRIPTION: Demonstrates the creation of a custom React hook that calls other hooks. This is valid as hooks are allowed to call other hooks. The compilation mode is set to 'infer'.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-2bec02ac982b.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// @compilationMode:\\\"infer\\\"\\n// Valid because hooks can call hooks.\\nfunction createHook() {\\n  return function useHook() {\\n    useHook1();\\n    useHook2();\\n  };\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hooks Usage Example\\nDESCRIPTION: Demonstrates the usage of React hooks such as useState, useCallback, and custom hooks. It includes examples of potential pitfalls and considerations for hook usage within conditional blocks.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.invalid.invalid-rules-of-hooks-191029ac48c8.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// @skip\\n// Passed but should have failed\\n\\n// Invalid because it's dangerous.\\n// Normally, this would crash, but not if you use inline requires.\\n// This *must* be invalid.\\n// It's expected to have some false positives, but arguably\\n// they are confusing anyway due to the use*() convention\\n// already being associated with Hooks.\\nuseState();\\nif (foo) {\\n  const foo = React.useCallback(() => {});\\n}\\nuseCustomHook();\\n\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call Example\\nDESCRIPTION: Demonstrates an invalid hook call within a try-catch block, violating the React 'Rules of Hooks' which state that hooks must be called consistently and not conditionally. This example highlights a common pitfall that can lead to unexpected behavior.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.error.rules-of-hooks-e29c874aa913.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// @skip\\n// Unsupported input\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useHook() {\\n  try {\\n    f();\\n    useState();\\n  } catch {} \\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Hooks in React.memo (Basic)\\nDESCRIPTION: Shows a basic example of using a hook (`useHook`) within an anonymous function passed to `React.memo`. This pattern is valid for memoizing components that utilize hooks.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.bail.rules-of-hooks-28a78701970c.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nconst MemoizedFunction = React.memo(props => {\\n  useHook();\\n  return <button {...props} />;\\n});\\n```\\n\\n----------------------------------------\\n\\nTITLE: Create React Hook\\nDESCRIPTION: Demonstrates creating a React hook that utilizes another hook. This snippet is valid because hooks are allowed to call other hooks, adhering to React's hook rules. It showcases a common pattern in React development for building reusable logic.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-33a6e23edac1.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// @compilationMode:\\\"infer\\\"\\n// Valid because hooks can use hooks.\\nfunction createHook() {\\n  return function useHookWithHook() {\\n    useHook();\\n  };\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hook Usage Example\\nDESCRIPTION: Demonstrates a valid React hook that calls another hook (useState). This highlights the ability for custom hooks to leverage built-in React hooks.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-2e405c78cb80.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Valid because hooks can call hooks.\\nfunction useHook() {\\n  useState() && a;\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call: Loop Violation\\nDESCRIPTION: This JavaScript code snippet demonstrates an invalid hook call within a `while` loop. React's Rules of Hooks state that hooks must be called at the top level of a React function component or custom hook, not inside loops, conditions, or nested functions. This violation leads to errors because the order of hook calls is inconsistent.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-d85c144bdf40.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useHookInLoops() {\\n  while (a) {\\n    useHook1();\\n    if (b) continue;\\n    useHook2();\\n  }\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hook Rule Violation Explanation\\nDESCRIPTION: This section outlines the specific error message and the underlying rule in React: 'Hooks may not be referenced as normal values, they must be called.' It highlights the problematic lines of code where the hook is misused.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-reassigned-in-conditional.expect.md#_snippet_1\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-hook-reassigned-in-conditional.ts:3:20\\n  1 | function Component(props) {\\n  2 |   let y;\\n> 3 |   props.cond ? (y = useFoo) : null;\\n    |                     ^^^^^^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  4 |   return y();\\n  5 | }\\n  6 |\\n\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-hook-reassigned-in-conditional.ts:3:16\\n  1 | function Component(props) {\\n  2 |   let y;\\n> 3 |   props.cond ? (y = useFoo) : null;\\n    |                 ^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  4 |   return y();\\n  5 | }\\n  6 |\\n\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-hook-reassigned-in-conditional.ts:4:9\\n  2 |   let y;\\n  3 |   props.cond ? (y = useFoo) : null;\\n> 4 |   return y();\\n    |          ^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  5 | }\\n  6 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: Valid Hook Usage in React\\nDESCRIPTION: This code snippet demonstrates a valid use of React Hooks. The `useState` hook is called at the top level of the functional component, outside of any loops or conditional statements, adhering to the rules of Hooks.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-69521d94fa03.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction App(props) {\\n  const someObject = { propA: true };\\n  for (const propName in someObject) {\\n    if (propName === true) {\\n    }\\n  }\\n\\n  useState(null);\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Rules of Hooks Error Explanation\\nDESCRIPTION: This section details the specific error message and the underlying cause related to the Rules of Hooks. It highlights that hooks cannot be called within function expressions, emphasizing the requirement for top-level calls within components or custom hooks. The provided link offers further details on the Rules of Hooks.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.bail.rules-of-hooks-8503ca76d6f8.expect.md#_snippet_1\\n\\nLANGUAGE: APIDOC\\nCODE:\\n```\\nError: Hooks must be called at the top level in the body of a function component or custom hook, and may not be called within function expressions. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nCannot call hook within a function expression.\\n\\nerror.bail.rules-of-hooks-8503ca76d6f8.ts:8:4\\n   6 | const ComponentWithHookInsideCallback = React.memo(props => {\\n   7 |   useEffect(() => {\\n>  8 |     useHookInsideCallback();\\n     |     ^^^^^^^^^^^^^^^^^^^^^ Hooks must be called at the top level in the body of a function component or custom hook, and may not be called within function expressions. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n   9 |   });\\n  10 |   return <button {...props} />;\\n  11 | });\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call: Conditional Hook After Early Return\\nDESCRIPTION: This snippet demonstrates a violation of the React 'Rules of Hooks'. Hooks must be called at the top level of a React function component or custom hook, and not within loops, conditions, or nested functions. Calling `useHook()` after an early `return null;` violates this rule because the hook call order is inconsistent.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-after-early-return.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component(props) {\\n  if (props.cond) {\\n    return null;\\n  }\\n  return useHook();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid React Hook Usage in Loops\\nDESCRIPTION: This code snippet illustrates a common mistake in React development: calling hooks inside loops. React hooks must be called at the top level of functional components or custom hooks, not conditionally or within loops, to ensure consistent ordering and prevent unexpected behavior. The provided error messages highlight the violation of the 'Rules of Hooks'.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-1b9527f967f3.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction useHookInLoops() {\\n  while (a) {\\n    useHook1();\\n    if (b) return;\\n    useHook2();\\n  }\\n  while (c) {\\n    useHook3();\\n    if (d) return;\\n    useHook4();\\n  }\\n}\\n```\\n\\nLANGUAGE: text\\nCODE:\\n```\\nFound 4 errors:\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-rules-of-hooks-1b9527f967f3.ts:7:4\\n   5 | function useHookInLoops() {\\n   6 |   while (a) {\\n>  7 |     useHook1();\\n     |     ^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n   8 |     if (b) return;\\n   9 |     useHook2();\\n  10 |   }\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-rules-of-hooks-1b9527f967f3.ts:9:4\\n   7 |     useHook1();\\n   8 |     if (b) return;\\n>  9 |     useHook2();\\n     |     ^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n  10 |   }\\n  11 |   while (c) {\\n  12 |     useHook3();\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-rules-of-hooks-1b9527f967f3.ts:12:4\\n  10 |   }\\n  11 |   while (c) {\\n> 12 |     useHook3();\\n     |     ^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n  13 |     if (d) return;\\n  14 |     useHook4();\\n  15 |   }\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-rules-of-hooks-1b9527f967f3.ts:14:4\\n  12 |     useHook3();\\n  13 |     if (d) return;\\n> 14 |     useHook4();\\n     |     ^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n  15 |   }\\n  16 | }\\n  17 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call: Conditional Hook Usage\\nDESCRIPTION: This snippet demonstrates an invalid usage of React Hooks where a hook is called conditionally within a component. React Hooks must be called at the top level of a React function component or custom hook, and in the same order on every render. Violating this rule can lead to unpredictable behavior and bugs.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-ea7c2fb545a9.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction useHookWithConditionalHook() {\\n  if (cond) {\\n    useConditionalHook();\\n  }\\n}\\n```\\n\\nLANGUAGE: APIDOC\\nCODE:\\n```\\nError: invalid-hook-call-warning\\n\\nDescription: Hooks must always be called in a consistent order, and may not be called conditionally. This rule ensures that React can correctly track the state of hooks across renders.\\n\\nRule Violation Example:\\n```javascript\\nfunction MyComponent(props) {\\n  if (props.show) {\\n    const [value, setValue] = useState(0);\\n  }\\n  // ... other code\\n}\\n```\\n\\nCorrect Usage:\\n```javascript\\nfunction MyComponent(props) {\\n  const [value, setValue] = useState(0);\\n  if (props.show) {\\n    // Use the state value here, but the hook is always called.\\n  }\\n  // ... other code\\n}\\n```\\n\\nSee also: https://react.dev/warnings/invalid-hook-call-warning\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Usage: Conditional Call\\nDESCRIPTION: Illustrates an error where a hook ('useNotAHook') is called conditionally within an 'if' statement. This violates the Rules of Hooks, which require hooks to be called in the same order on every render.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.error.rules-of-hooks-d0935abedc42.expect.md#_snippet_1\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nFound 1 error:\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\ntodo.error.rules-of-hooks-d0935abedc42.ts:8:4\\n   6 | React.unknownFunction((foo, bar) => {\\n   7 |   if (foo) {\\n>  8 |     useNotAHook(bar);\\n     |     ^^^^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n   9 |   }\\n  10 | });\\n  11 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: Valid Hook Usage Example\\nDESCRIPTION: Demonstrates a scenario where a 'use'-prefixed function is called within an unnamed function argument, which is considered valid as it's not assumed to be a hook in this context.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.error.rules-of-hooks-d0935abedc42.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// @skip\\n// Unsupported input\\n\\n// This is valid because \\\"use\\\"-prefixed functions called in\\n// unnamed function arguments are not assumed to be hooks.\\nReact.unknownFunction((foo, bar) => {\\n  if (foo) {\\n    useNotAHook(bar);\\n  }\\n});\\n```\\n\\n----------------------------------------\\n\\nTITLE: Custom Hook Calling Other Hooks (JavaScript)\\nDESCRIPTION: This JavaScript code snippet illustrates a custom React hook named `useHook` that successfully calls two other custom hooks, `useHook1` and `useHook2`. This pattern is valid in React for composing hook logic.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-cfdfe5572fc7.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Valid because hooks can call hooks.\\nfunction useHook() {\\n  useHook1();\\n  useHook2();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hook Rule Violation Error\\nDESCRIPTION: This snippet details a specific error encountered in React when a hook's return value is dynamically used as a hook. The error message explains that hooks must be consistent across renders and provides a link to the React documentation for further details.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-from-hook-return.expect.md#_snippet_1\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nFound 1 error:\\n\\nError: Hooks must be the same function on every render, but this value may change over time to a different function. See https://react.dev/reference/rules/react-calls-components-and-hooks#dont-dynamically-use-hooks\\n\\nerror.invalid-hook-from-hook-return.ts:3:14\\n  1 | function useFoo({data}) {\\n  2 |   const useMedia = useVideoPlayer();\\n> 3 |   const foo = useMedia();\\n    |               ^^^^^^^^ Hooks must be the same function on every render, but this value may change over time to a different function. See https://react.dev/reference/rules/react-calls-components-and-hooks#dont-dynamically-use-hooks\\n  4 |   return foo;\\n  5 | }\\n  6 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Calls in React\\nDESCRIPTION: This snippet shows examples of calling React hooks conditionally using logical AND (&&), OR (||), and nullish coalescing (??) operators. These patterns violate the Rules of Hooks, which state that hooks must be called at the top level of a React function component or custom hook, and never within loops, conditions, or nested functions. The provided error messages highlight these violations and link to the official React documentation for further details.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-f69800950ff0.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useHook({bar}) {\\n  let foo1 = bar && useState();\\n  let foo2 = bar || useState();\\n  let foo3 = bar ?? useState();\\n}\\n```\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useHook({bar}: { bar: boolean }): void {\\n  let foo1 = bar && useState();\\n  let foo2 = bar || useState();\\n  let foo3 = bar ?? useState();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Incorrect React Hook Usage\\nDESCRIPTION: This snippet shows a React component where a hook ('Foo.useFoo') is assigned to a variable and then called. The error message indicates that hooks must be called directly and cannot be passed around as regular values. This is a common mistake when developing React applications.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.propertyload-hook.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component() {\\n  const x = Foo.useFoo;\\n  return x();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call Example\\nDESCRIPTION: This JavaScript code snippet demonstrates an invalid usage of React Hooks. Hooks like `useConditionalHook` must be called directly within the body of a function component or a custom hook, not inside nested function expressions. This violates the 'Rules of Hooks' and will result in a runtime error.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid.invalid-rules-of-hooks-0a1dbff27ba0.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction createHook() {\\n  return function useHookWithConditionalHook() {\\n    if (cond) {\\n      useConditionalHook();\\n    }\\n  };\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Conditional Hook Call\\nDESCRIPTION: This JavaScript code snippet illustrates a violation of the React Rules of Hooks. The `useState()` hook is called conditionally within the `useHook` function, which is not allowed. Hooks must be called at the top level of a React function component or another custom Hook, and their order must remain consistent across renders.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-f3d6c5e9c83d.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction useHook() {\\n  if (b) {\\n    console.log('true');\\n  } else {\\n    console.log('false');\\n  }\\n  if (a) return;\\n  useState();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call: useState inside Function Expression\\nDESCRIPTION: This snippet demonstrates an invalid usage of React Hooks. The `useState` hook is called inside a nested function expression (`handleClick`), which violates the 'Rules of Hooks'. Hooks must be called directly within the body of a function component or a custom hook, not within nested functions or callbacks. This can lead to unpredictable behavior and errors.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid.invalid-rules-of-hooks-449a37146a83.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction createComponent() {\\n  return function ComponentWithHookInsideCallback() {\\n    function handleClick() {\\n      useState();\\n    }\\n  };\\n}\\n```\\n\\nLANGUAGE: APIDOC\\nCODE:\\n```\\nError: Invalid Hook Call\\n\\nDescription: Hooks must be called at the top level in the body of a function component or custom hook, and may not be called within function expressions.\\n\\nRule Violation: Hooks cannot be called inside nested functions, callbacks, or event handlers.\\n\\nExample Violation:\\n```javascript\\nfunction MyComponent() {\\n  const handleClick = () => {\\n    useState(0); // Invalid: Called inside an event handler\\n  };\\n  return <button onClick={handleClick}>Click Me</button>;\\n}\\n```\\n\\nCorrect Usage:\\n```javascript\\nfunction MyComponent() {\\n  const [count, setCount] = useState(0);\\n  const handleClick = () => {\\n    setCount(count + 1);\\n  };\\n  return <button onClick={handleClick}>Clicked {count} times</button>;\\n}\\n```\\n\\nSee also: https://react.dev/warnings/invalid-hook-call-warning\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hooks Rules Violation Error\\nDESCRIPTION: Details the specific error message and stack trace when the 'Rules of Hooks' are violated in React. This error indicates that hooks are being called conditionally or in an inconsistent order, which is not permitted.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.error.rules-of-hooks-e29c874aa913.expect.md#_snippet_1\\n\\nLANGUAGE: APIDOC\\nCODE:\\n```\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\ntodo.error.rules-of-hooks-e29c874aa913.ts:9:4\\n   7 |\\n   8 |   try {\\n   9 |     f();\\n> 10 |     useState();\\n     |     ^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n  11 |   } catch {}\\n  12 | }\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call Example\\nDESCRIPTION: This JavaScript code snippet demonstrates an invalid hook call within a function. React enforces that hooks must be called in the same order on every render and cannot be called conditionally. This example violates that rule by calling `useHook1` and `useHook2` conditionally based on variables `a` and `b`.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-9bf17c174134.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useHook() {\\n  a && useHook1();\\n  b && useHook2();\\n}\\n\\n```\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useHook() {\\n  a && useHook1();\\n  b && useHook2();\\n}\\n\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid React Hook Call\\nDESCRIPTION: This JavaScript code snippet demonstrates a common error in React development where a hook (`useHook`) is called conditionally within a labeled block. This violates the 'Rules of Hooks', which mandates that hooks must be called at the top level of a React function component or custom hook, and in the same order on every render. The provided error message details the specific violation and links to the official React documentation for further explanation.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-49d341e5d68f.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useLabeledBlock() {\\n  label: {\\n    if (a) break label;\\n    useHook();\\n  }\\n}\\n```\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nFound 1 error:\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-rules-of-hooks-49d341e5d68f.ts:8:4\\n   6 |\\n   7 |\\n>  8 |     useHook();\\n     |     ^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n   9 |\\n  10 |\\n  11 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Component with Invalid Hook Usage\\nDESCRIPTION: This JavaScript code defines a React component that attempts to call a hook (`useHook`) within a `for` loop. This violates React's Rules of Hooks, which state that hooks must be called in the same order on every render and not conditionally. The loop structure leads to inconsistent hook calls.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-for.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component(props) {\\n  let i = 0;\\n  for (let x = 0; useHook(x) < 10; useHook(i), x++) {\\n    i += useHook(x);\\n  }\\n  return i;\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Valid React Hook Usage\\nDESCRIPTION: This snippet shows a custom React hook `useFoo` that correctly utilizes other hooks like `useVideoPlayer` and `useMedia`. It demonstrates a standard pattern for integrating custom logic within React components.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-from-property-of-other-hook.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction useFoo({data}) {\\n  const player = useVideoPlayer();\\n  const foo = player.useMedia();\\n  return foo;\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: useFoo React Hook\\nDESCRIPTION: A React hook named `useFoo` that takes props containing a potentially null object with 'x' and 'y' properties. It utilizes a custom hook `useNoAlias` and handles nullish coalescing. The hook is intended for use with shared runtime functionalities.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.todo-optional-call-chain-in-logical-expr.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nimport {useNoAlias} from 'shared-runtime';\\n\\nfunction useFoo(props: {value: {x: string; y: string} | null}) {\\n  const value = props.value;\\n  return useNoAlias(value?.x, value?.y) ?? {};\\n}\\n\\nexport const FIXTURE_ENTRYPONT = {\\n  fn: useFoo,\\n  props: [{value: null}],\\n};\\n\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Conditional Hook Call in React\\nDESCRIPTION: This snippet illustrates a React component that attempts to call a hook conditionally using optional chaining (`?.`). This violates the React 'Rules of Hooks', which state that hooks must be called at the top level of a React function component or custom hook, and never conditionally. The example also shows the associated error message and its location within the code.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-optional-methodcall.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component() {\\n  const {result} = Module.useConditionalHook?.() ?? {};\\n  return result;\\n}\\n```\\n\\nLANGUAGE: react\\nCODE:\\n```\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-hook-optional-methodcall.ts:2:19\\n  1 |\\n  2 |   const {result} = Module.useConditionalHook?.() ?? {};\\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n  3 |   return result;\\n  4 | }\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hook Rules Violation Error Messages\\nDESCRIPTION: This section details the error messages generated by React's linting rules when hooks are misused. It highlights that hooks cannot be referenced as normal values and must be called directly, providing specific line and character indicators for the violations.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.invalid-ternary-with-hook-values.expect.md#_snippet_1\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nFound 4 errors:\\n\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-ternary-with-hook-values.ts:2:25\\n  1 | function Component(props) {\\n> 2 |   const x = props.cond ? useA : useB;\\n    |                          ^^^^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  3 |   return x();\\n  4 | }\\n  5 | \\n\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-ternary-with-hook-values.ts:2:32\\n  1 | function Component(props) {\\n> 2 |   const x = props.cond ? useA : useB;\\n    |                                 ^^^^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  3 |   return x();\\n  4 | }\\n  5 | \\n\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-ternary-with-hook-values.ts:2:12\\n  1 | function Component(props) {\\n> 2 |   const x = props.cond ? useA : useB;\\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  3 |   return x();\\n  4 | }\\n  5 | \\n\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-ternary-with-hook-values.ts:3:9\\n  1 | function Component(props) {\\n  2 |   const x = props.cond ? useA : useB;\\n> 3 |   return x();\\n    |          ^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  4 | }\\n  5 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call in Function Expression\\nDESCRIPTION: This snippet demonstrates an invalid usage of React Hooks where `useEffect` is called within a function expression passed to `React.memo`. According to the Rules of Hooks, hooks must be called at the top level of a function component or custom hook, not inside nested functions or callbacks. This can lead to unpredictable behavior and runtime errors.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.bail.rules-of-hooks-8503ca76d6f8.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nconst ComponentWithHookInsideCallback = React.memo(props => {\\n  useEffect(() => {\\n    useHookInsideCallback();\\n  });\\n  return <button {...props} />;\\n});\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Conditional Hook Call in React\\nDESCRIPTION: This JavaScript code snippet demonstrates an incorrect way to use React Hooks. The `useCustomHook` is called conditionally based on the `props.fancy` value. React's Rules of Hooks state that hooks must be called at the top level of a React function component or a custom hook, and not within loops, conditions, or nested functions. The associated error message explains this violation and provides a link to the official React documentation for more information.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.error.invalid-rules-of-hooks-368024110a58.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nconst FancyButton = forwardRef(function (props, ref) {\\n  if (props.fancy) {\\n    useCustomHook();\\n  }\\n  return <button ref={ref}>{props.children}</button>;\\n});\\n```\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nconst FancyButton = forwardRef(function (props: { fancy?: boolean; children: React.ReactNode }, ref: React.Ref<HTMLButtonElement>) {\\n  if (props.fancy) {\\n    useCustomHook();\\n  }\\n  return <button ref={ref}>{props.children}</button>;\\n});\\n```\\n\\n----------------------------------------\\n\\nTITLE: Conditional Hook Call in React\\nDESCRIPTION: This snippet demonstrates an invalid usage of React Hooks where a hook (`useConditionalHook`) is called conditionally using optional chaining (`?.`) and nullish coalescing (`??`). This violates the 'Rules of Hooks', which mandate that hooks must be called at the top level of a React function component or custom hook, and never conditionally. The error message points to the specific line and provides a link to the official React documentation for further details.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-optionalcall.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component() {\\n  const {result} = useConditionalHook?.() ?? {};\\n  return result;\\n}\\n```\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nfunction Component() {\\n  const {result} = useConditionalHook?.() ?? {};\\n  return result;\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Incorrectly Referencing React Hooks\\nDESCRIPTION: This snippet demonstrates a common error in React where a hook (`useFoo`) is assigned to a variable (`y`) within a conditional statement and then called later. React hooks must be called directly within the component body, not referenced as values or passed around.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-reassigned-in-conditional.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component(props) {\\n  let y;\\n  props.cond ? (y = useFoo) : null;\\n  return y();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hooks Rule Violation Error\\nDESCRIPTION: This section details the error message generated by React when the 'Rules of Hooks' are violated. It specifically points out the conditional calling of a hook and provides a link to the official documentation for further explanation.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-if-alternate.expect.md#_snippet_1\\n\\nLANGUAGE: react\\nCODE:\\n```\\nFound 1 error:\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-hook-if-alternate.ts:5:8\\n  3 |\\n  4 |\\n> 5 |     x = useHook();\\n    |         ^^^^^^^\\n  6 |\\n  7 |\\n  8 |\\n    | Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid React Hook Call (Conditional)\\nDESCRIPTION: This JavaScript code snippet illustrates a common error in React development: calling a hook conditionally within a ternary operator. According to the Rules of Hooks, hooks must be called at the top level of a React function component or custom hook, and never inside loops, conditions, or nested functions. This example is expected to fail and trigger a warning.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-b4dcda3d60ed.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction ComponentWithTernaryHook() {\\n  cond ? useTernaryHook() : null;\\n}\\n```\\n\\nLANGUAGE: APIDOC\\nCODE:\\n```\\nReact Rules of Hooks:\\n\\n- Hooks must always be called in a consistent order.\\n- Hooks may not be called conditionally.\\n- Hooks must be called at the top level of a React function component or custom hook.\\n\\nExample Error:\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-rules-of-hooks-b4dcda3d60ed.ts:6:9\\n  4 | // This *must* be invalid.\\n  5 | function ComponentWithTernaryHook() {\\n> 6 |   cond ? useTernaryHook() : null;\\n    |          ^^^^^^^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n  7 | }\\n  8 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: Conditional Hook Call in React\\nDESCRIPTION: This JavaScript code snippet shows a React component where the `useHook()` function is called conditionally within an `if-else` block. This violates the React 'Rules of Hooks', which mandate that hooks must be called at the top level of a React function component or custom hook, and in the same order on every render.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-if-alternate.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component(props) {\\n  let x = null;\\n  if (props.cond) {\\n  } else {\\n    x = useHook();\\n  }\\n  return x;\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid React Hook Call\\nDESCRIPTION: This JavaScript code snippet demonstrates a violation of React's Rules of Hooks. The `useState` hook is called conditionally within the `useHook` function, which is not allowed. The provided error message explains that hooks must be called in a consistent order and not conditionally. Refer to the React documentation for detailed rules.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-9718e30b856c.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction useHook() {\\n  if (a) return;\\n  if (b) {\\n    console.log('true');\\n  } else {\\n    console.log('false');\\n  }\\n  useState();\\n}\\n```\\n\\nLANGUAGE: APIDOC\\nCODE:\\n```\\nError Message:\\n  Found 1 error:\\n\\n  Error: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\n  error.invalid-rules-of-hooks-9718e30b856c.ts:12:2\\n    10 |     console.log('false');\\n    11 |   }\\n  > 12 |   useState();\\n       |   ^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n    13 | }\\n    14 | \\n\\nRule Violation:\\n  - Hooks cannot be called inside loops, conditions, or nested functions.\\n  - All hooks must be called at the top level of a React function component or a custom hook.\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hook Naming Conventions\\nDESCRIPTION: Demonstrates valid React hook naming conventions, emphasizing that hooks must start with 'use' followed by a capital letter. It also shows examples of valid custom hooks and the use of Jest's fake timers.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-df4d750736f3.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Valid because they're not matching use[A-Z].\\nfooState();\\n_use();\\n_useState();\\nuse_hook();\\n// also valid because it's not matching the PascalCase namespace\\njest.useFakeTimer();\\n\\n```\\n\\n========================\\nQUESTIONS AND ANSWERS\\n========================\\nTOPIC: React Hooks - Conditional Hook Call Example\\nQ: What specific React rule is violated by calling a Hook conditionally?\\nA: Calling a Hook conditionally violates the 'Rules of Hooks'. This rule mandates that Hooks must be called at the top level of a React function component or a custom Hook, not within loops, conditions, or nested functions.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-optional-methodcall.expect.md#_qa_1\\n\\n----------------------------------------\\n\\nTOPIC: React Hook Usage Violations\\nQ: What is the rule in React regarding referencing hooks as normal values?\\nA: In React, hooks must be called directly and cannot be referenced as normal values. This means you should not assign a hook to a variable or pass it around without invoking it.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-call-phi-possibly-hook.expect.md#_qa_0\\n\\n----------------------------------------\\n\\nTOPIC: React Component Hook Usage Error\\nQ: What is the rule regarding referencing React Hooks as normal values?\\nA: React Hooks must be called directly, not referenced as normal values. Attempting to assign a hook to a variable or pass it around without calling it will result in an error.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.invalid-ternary-with-hook-values.expect.md#_qa_0\\n\\n----------------------------------------\\n\\nTOPIC: React Component Hook Usage\\nQ: What does the error 'Hooks must be the same function on every render' indicate in React?\\nA: This error indicates that a hook is being called conditionally or that the function passed as a hook might be changing between renders. React requires hooks to be called at the top level of a component or custom hook, and the same hook must be called on every render.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-as-prop.expect.md#_qa_2\\n\\n----------------------------------------\\n\\nTOPIC: React Hooks Rules Violation\\nQ: Where can React Hooks be safely called?\\nA: React Hooks can only be called at the top level of a React function component or a custom React hook. They should not be called within regular JavaScript functions or inside other Hooks unless it's a custom hook.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.bail.rules-of-hooks-3d692676194b.expect.md#_qa_3\\n\\n----------------------------------------\\n\\nTOPIC: React Hooks Usage Example\\nQ: What is the React rule regarding referencing hooks as normal values?\\nA: React rules state that hooks cannot be referenced as normal values. They must always be called directly.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.hook-property-load-local-hook.expect.md#_qa_0\\n\\n----------------------------------------\\n\\nTOPIC: React Compiler Test - useHookNotTypedAsHook Example\\nQ: How does the React compiler identify potential hooks within a module?\\nA: The React compiler identifies potential hooks by their naming convention. Properties that start with the prefix 'use' are expected to be React hooks and must be typed accordingly.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.invalid-type-provider-hook-name-not-typed-as-hook.expect.md#_qa_2\\n\\n----------------------------------------\\n\\nTOPIC: React Hook Usage Violations\\nQ: What type of error does React report when a hook is conditionally referenced?\\nA: React reports an error for 'conditional hook calls' when a hook might be referenced as a normal value. This occurs when the variable assigned a hook is determined by a condition, and the hook itself is not directly called.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-call-phi-possibly-hook.expect.md#_qa_2\\n\\n----------------------------------------\\n\\nTOPIC: React Hooks Usage Example\\nQ: What is the React rule regarding dynamic use of hooks?\\nA: React rules state that hooks must be the same function on every render. This value may change over time to a different function, which is not allowed. This rule ensures predictable behavior and prevents issues related to state management and rendering cycles.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-from-property-of-other-hook.expect.md#_qa_0\\n\\n----------------------------------------\\n\\nTOPIC: React Component Hook Usage\\nQ: What is the rule regarding the consistency of hooks in React?\\nA: In React, hooks must be the same function on every render. This means you cannot dynamically use hooks or change the hook function between renders.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-as-prop.expect.md#_qa_0\"\n      }\n    ]\n  },\n  \"raw\": {\n    \"result\": {\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"========================\\nCODE SNIPPETS\\n========================\\nTITLE: Custom Hook Calling Other Hooks\\nDESCRIPTION: This snippet demonstrates a custom React hook `useHook` that calls two other hypothetical hooks, `useHook1` and `useHook2`. This is a valid pattern in React.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-23dc7fffde57.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Valid because hooks can call hooks.\\nfunction useHook() {\\n  return useHook1() + useHook2();\\n}\\n\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call Example\\nDESCRIPTION: This JavaScript code snippet demonstrates an invalid usage of React Hooks. Hooks like `useConditionalHook` are called inside a function expression (`ComponentWithConditionalHook`), which violates the 'Rules of Hooks'. This pattern is disallowed because hooks must be called at the top level of a function component or a custom hook.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid.invalid-rules-of-hooks-d842d36db450.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction createComponent() {\\n  return function ComponentWithConditionalHook() {\\n    if (cond) {\\n      useConditionalHook();\\n    }\\n  };\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hook Definitions\\nDESCRIPTION: Illustrates multiple valid ways to define React hooks, such as function declarations, arrow functions, and assignments within object destructuring. It highlights that hooks can call other hooks like useState.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.bail.rules-of-hooks-e0a5db3ae21e.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// @skip\\n// Unsupported input\\n\\n// Valid because hooks can call hooks.\\nfunction useHook() {\\n  useState();\\n}\\n\\nconst whatever = function useHook() {\\n  useState();\\n};\\n\\nconst useHook1 = () => {\\n  useState();\\n};\\n\\nlet useHook2 = () => {\\n  return useState();\\n};\\nuseHook2 = () => {\\n  useState();\\n};\\n\\n({\\n  useHook: () => {\\n    useState();\\n  },\\n});\\n({\\n  useHook() {\\n    useState();\\n  },\\n});\\nconst {\\n  useHook3 = () => {\\n    useState();\\n  },\\n} = {};\\n({\\n  useHook = () => {\\n    useState();\\n  },\\n} = {});\\nNamespace.useHook = () => {\\n  useState();\\n};\\n\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Custom Hook Usage\\nDESCRIPTION: This snippet shows a custom React hook `useFoo` that utilizes another hook `useVideoPlayer`. It illustrates a common pitfall where a hook's return value is treated as a hook itself, leading to errors.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-from-hook-return.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction useFoo({data}) {\\n  const useMedia = useVideoPlayer();\\n  const foo = useMedia();\\n  return foo;\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Custom Hook Calling Other Hooks\\nDESCRIPTION: Demonstrates a custom React hook (`useHook`) that calls two other custom hooks (`useHook1` and `useHook2`). This is a valid pattern in React.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-9d7879272ff6.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Valid because hooks can call hooks.\\nfunction useHook() {\\n  return useHook1(useHook2());\\n}\\n\\n```\\n\\n----------------------------------------\\n\\nTITLE: Custom Hook Using Another Hook\\nDESCRIPTION: This snippet demonstrates a valid custom React hook named `useHookWithHook` that calls another hook, `useHook`. This is a common pattern in React for building reusable logic.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-844a496db20b.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Valid because hooks can use hooks.\\nfunction useHookWithHook() {\\n  useHook();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Conditional Hook Reference Violation in React\\nDESCRIPTION: This snippet demonstrates a violation of the React rule that states hooks must be called and cannot be referenced as normal values. The `useGetUser` hook is conditionally assigned to a variable `getUser`, which is then called. This is an invalid pattern because hooks should always be called directly within the component body or other hooks, not assigned to variables conditionally.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-call-phi-possibly-hook.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component(props) {\\n  // This is a violation of using a hook as a normal value rule:\\n  const getUser = props.cond ? useGetUser : emptyFunction;\\n\\n  // Ideally we would report a \\\"conditional hook call\\\" error here.\\n  // It's an unconditional call, but the value may or may not be a hook.\\n  // TODO: report a conditional hook call error here\\n  return getUser();\\n\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Dynamic Hook Usage in React\\nDESCRIPTION: This snippet demonstrates an incorrect way to use React hooks by assigning a hook's return value to a variable and then calling it. React's rules of hooks state that hooks must be called in the same order and on the same conditions on every render. Assigning a hook's result to a variable that might change can lead to this error.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-dynamic-hook-via-hooklike-local.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component() {\\n  const someFunction = useContext(FooContext);\\n  const useOhItsNamedLikeAHookNow = someFunction;\\n  useOhItsNamedLikeAHookNow();\\n}\\n```\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nError: Hooks must be the same function on every render, but this value may change over time to a different function. See https://react.dev/reference/rules/react-calls-components-and-hooks#dont-dynamically-use-hooks\\n\\nerror.invalid-dynamic-hook-via-hooklike-local.ts:4:2\\n  2 |\\n  3 |   const someFunction = useContext(FooContext);\\n  4 |   const useOhItsNamedLikeAHookNow = someFunction;\\n> 5 |   useOhItsNamedLikeAHookNow();\\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^^ Hooks must be the same function on every render, but this value may change over time to a different function. See https://react.dev/reference/rules/react-calls-components-and-hooks#dont-dynamically-use-hooks\\n  6 |\\n  7 | }\\n```\\n\\n----------------------------------------\\n\\nTITLE: Create React Hook\\nDESCRIPTION: Demonstrates the creation of a custom React hook that calls other hooks. This is valid as hooks are allowed to call other hooks. The compilation mode is set to 'infer'.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-2bec02ac982b.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// @compilationMode:\\\"infer\\\"\\n// Valid because hooks can call hooks.\\nfunction createHook() {\\n  return function useHook() {\\n    useHook1();\\n    useHook2();\\n  };\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hooks Usage Example\\nDESCRIPTION: Demonstrates the usage of React hooks such as useState, useCallback, and custom hooks. It includes examples of potential pitfalls and considerations for hook usage within conditional blocks.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.invalid.invalid-rules-of-hooks-191029ac48c8.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// @skip\\n// Passed but should have failed\\n\\n// Invalid because it's dangerous.\\n// Normally, this would crash, but not if you use inline requires.\\n// This *must* be invalid.\\n// It's expected to have some false positives, but arguably\\n// they are confusing anyway due to the use*() convention\\n// already being associated with Hooks.\\nuseState();\\nif (foo) {\\n  const foo = React.useCallback(() => {});\\n}\\nuseCustomHook();\\n\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call Example\\nDESCRIPTION: Demonstrates an invalid hook call within a try-catch block, violating the React 'Rules of Hooks' which state that hooks must be called consistently and not conditionally. This example highlights a common pitfall that can lead to unexpected behavior.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.error.rules-of-hooks-e29c874aa913.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// @skip\\n// Unsupported input\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useHook() {\\n  try {\\n    f();\\n    useState();\\n  } catch {} \\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Hooks in React.memo (Basic)\\nDESCRIPTION: Shows a basic example of using a hook (`useHook`) within an anonymous function passed to `React.memo`. This pattern is valid for memoizing components that utilize hooks.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.bail.rules-of-hooks-28a78701970c.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nconst MemoizedFunction = React.memo(props => {\\n  useHook();\\n  return <button {...props} />;\\n});\\n```\\n\\n----------------------------------------\\n\\nTITLE: Create React Hook\\nDESCRIPTION: Demonstrates creating a React hook that utilizes another hook. This snippet is valid because hooks are allowed to call other hooks, adhering to React's hook rules. It showcases a common pattern in React development for building reusable logic.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-33a6e23edac1.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// @compilationMode:\\\"infer\\\"\\n// Valid because hooks can use hooks.\\nfunction createHook() {\\n  return function useHookWithHook() {\\n    useHook();\\n  };\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hook Usage Example\\nDESCRIPTION: Demonstrates a valid React hook that calls another hook (useState). This highlights the ability for custom hooks to leverage built-in React hooks.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-2e405c78cb80.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Valid because hooks can call hooks.\\nfunction useHook() {\\n  useState() && a;\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call: Loop Violation\\nDESCRIPTION: This JavaScript code snippet demonstrates an invalid hook call within a `while` loop. React's Rules of Hooks state that hooks must be called at the top level of a React function component or custom hook, not inside loops, conditions, or nested functions. This violation leads to errors because the order of hook calls is inconsistent.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-d85c144bdf40.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useHookInLoops() {\\n  while (a) {\\n    useHook1();\\n    if (b) continue;\\n    useHook2();\\n  }\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hook Rule Violation Explanation\\nDESCRIPTION: This section outlines the specific error message and the underlying rule in React: 'Hooks may not be referenced as normal values, they must be called.' It highlights the problematic lines of code where the hook is misused.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-reassigned-in-conditional.expect.md#_snippet_1\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-hook-reassigned-in-conditional.ts:3:20\\n  1 | function Component(props) {\\n  2 |   let y;\\n> 3 |   props.cond ? (y = useFoo) : null;\\n    |                     ^^^^^^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  4 |   return y();\\n  5 | }\\n  6 |\\n\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-hook-reassigned-in-conditional.ts:3:16\\n  1 | function Component(props) {\\n  2 |   let y;\\n> 3 |   props.cond ? (y = useFoo) : null;\\n    |                 ^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  4 |   return y();\\n  5 | }\\n  6 |\\n\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-hook-reassigned-in-conditional.ts:4:9\\n  2 |   let y;\\n  3 |   props.cond ? (y = useFoo) : null;\\n> 4 |   return y();\\n    |          ^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  5 | }\\n  6 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: Valid Hook Usage in React\\nDESCRIPTION: This code snippet demonstrates a valid use of React Hooks. The `useState` hook is called at the top level of the functional component, outside of any loops or conditional statements, adhering to the rules of Hooks.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-69521d94fa03.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction App(props) {\\n  const someObject = { propA: true };\\n  for (const propName in someObject) {\\n    if (propName === true) {\\n    }\\n  }\\n\\n  useState(null);\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Rules of Hooks Error Explanation\\nDESCRIPTION: This section details the specific error message and the underlying cause related to the Rules of Hooks. It highlights that hooks cannot be called within function expressions, emphasizing the requirement for top-level calls within components or custom hooks. The provided link offers further details on the Rules of Hooks.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.bail.rules-of-hooks-8503ca76d6f8.expect.md#_snippet_1\\n\\nLANGUAGE: APIDOC\\nCODE:\\n```\\nError: Hooks must be called at the top level in the body of a function component or custom hook, and may not be called within function expressions. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nCannot call hook within a function expression.\\n\\nerror.bail.rules-of-hooks-8503ca76d6f8.ts:8:4\\n   6 | const ComponentWithHookInsideCallback = React.memo(props => {\\n   7 |   useEffect(() => {\\n>  8 |     useHookInsideCallback();\\n     |     ^^^^^^^^^^^^^^^^^^^^^ Hooks must be called at the top level in the body of a function component or custom hook, and may not be called within function expressions. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n   9 |   });\\n  10 |   return <button {...props} />;\\n  11 | });\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call: Conditional Hook After Early Return\\nDESCRIPTION: This snippet demonstrates a violation of the React 'Rules of Hooks'. Hooks must be called at the top level of a React function component or custom hook, and not within loops, conditions, or nested functions. Calling `useHook()` after an early `return null;` violates this rule because the hook call order is inconsistent.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-after-early-return.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component(props) {\\n  if (props.cond) {\\n    return null;\\n  }\\n  return useHook();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid React Hook Usage in Loops\\nDESCRIPTION: This code snippet illustrates a common mistake in React development: calling hooks inside loops. React hooks must be called at the top level of functional components or custom hooks, not conditionally or within loops, to ensure consistent ordering and prevent unexpected behavior. The provided error messages highlight the violation of the 'Rules of Hooks'.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-1b9527f967f3.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction useHookInLoops() {\\n  while (a) {\\n    useHook1();\\n    if (b) return;\\n    useHook2();\\n  }\\n  while (c) {\\n    useHook3();\\n    if (d) return;\\n    useHook4();\\n  }\\n}\\n```\\n\\nLANGUAGE: text\\nCODE:\\n```\\nFound 4 errors:\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-rules-of-hooks-1b9527f967f3.ts:7:4\\n   5 | function useHookInLoops() {\\n   6 |   while (a) {\\n>  7 |     useHook1();\\n     |     ^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n   8 |     if (b) return;\\n   9 |     useHook2();\\n  10 |   }\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-rules-of-hooks-1b9527f967f3.ts:9:4\\n   7 |     useHook1();\\n   8 |     if (b) return;\\n>  9 |     useHook2();\\n     |     ^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n  10 |   }\\n  11 |   while (c) {\\n  12 |     useHook3();\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-rules-of-hooks-1b9527f967f3.ts:12:4\\n  10 |   }\\n  11 |   while (c) {\\n> 12 |     useHook3();\\n     |     ^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n  13 |     if (d) return;\\n  14 |     useHook4();\\n  15 |   }\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-rules-of-hooks-1b9527f967f3.ts:14:4\\n  12 |     useHook3();\\n  13 |     if (d) return;\\n> 14 |     useHook4();\\n     |     ^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n  15 |   }\\n  16 | }\\n  17 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call: Conditional Hook Usage\\nDESCRIPTION: This snippet demonstrates an invalid usage of React Hooks where a hook is called conditionally within a component. React Hooks must be called at the top level of a React function component or custom hook, and in the same order on every render. Violating this rule can lead to unpredictable behavior and bugs.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-ea7c2fb545a9.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction useHookWithConditionalHook() {\\n  if (cond) {\\n    useConditionalHook();\\n  }\\n}\\n```\\n\\nLANGUAGE: APIDOC\\nCODE:\\n```\\nError: invalid-hook-call-warning\\n\\nDescription: Hooks must always be called in a consistent order, and may not be called conditionally. This rule ensures that React can correctly track the state of hooks across renders.\\n\\nRule Violation Example:\\n```javascript\\nfunction MyComponent(props) {\\n  if (props.show) {\\n    const [value, setValue] = useState(0);\\n  }\\n  // ... other code\\n}\\n```\\n\\nCorrect Usage:\\n```javascript\\nfunction MyComponent(props) {\\n  const [value, setValue] = useState(0);\\n  if (props.show) {\\n    // Use the state value here, but the hook is always called.\\n  }\\n  // ... other code\\n}\\n```\\n\\nSee also: https://react.dev/warnings/invalid-hook-call-warning\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Usage: Conditional Call\\nDESCRIPTION: Illustrates an error where a hook ('useNotAHook') is called conditionally within an 'if' statement. This violates the Rules of Hooks, which require hooks to be called in the same order on every render.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.error.rules-of-hooks-d0935abedc42.expect.md#_snippet_1\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nFound 1 error:\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\ntodo.error.rules-of-hooks-d0935abedc42.ts:8:4\\n   6 | React.unknownFunction((foo, bar) => {\\n   7 |   if (foo) {\\n>  8 |     useNotAHook(bar);\\n     |     ^^^^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n   9 |   }\\n  10 | });\\n  11 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: Valid Hook Usage Example\\nDESCRIPTION: Demonstrates a scenario where a 'use'-prefixed function is called within an unnamed function argument, which is considered valid as it's not assumed to be a hook in this context.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.error.rules-of-hooks-d0935abedc42.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// @skip\\n// Unsupported input\\n\\n// This is valid because \\\"use\\\"-prefixed functions called in\\n// unnamed function arguments are not assumed to be hooks.\\nReact.unknownFunction((foo, bar) => {\\n  if (foo) {\\n    useNotAHook(bar);\\n  }\\n});\\n```\\n\\n----------------------------------------\\n\\nTITLE: Custom Hook Calling Other Hooks (JavaScript)\\nDESCRIPTION: This JavaScript code snippet illustrates a custom React hook named `useHook` that successfully calls two other custom hooks, `useHook1` and `useHook2`. This pattern is valid in React for composing hook logic.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-cfdfe5572fc7.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Valid because hooks can call hooks.\\nfunction useHook() {\\n  useHook1();\\n  useHook2();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hook Rule Violation Error\\nDESCRIPTION: This snippet details a specific error encountered in React when a hook's return value is dynamically used as a hook. The error message explains that hooks must be consistent across renders and provides a link to the React documentation for further details.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-from-hook-return.expect.md#_snippet_1\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nFound 1 error:\\n\\nError: Hooks must be the same function on every render, but this value may change over time to a different function. See https://react.dev/reference/rules/react-calls-components-and-hooks#dont-dynamically-use-hooks\\n\\nerror.invalid-hook-from-hook-return.ts:3:14\\n  1 | function useFoo({data}) {\\n  2 |   const useMedia = useVideoPlayer();\\n> 3 |   const foo = useMedia();\\n    |               ^^^^^^^^ Hooks must be the same function on every render, but this value may change over time to a different function. See https://react.dev/reference/rules/react-calls-components-and-hooks#dont-dynamically-use-hooks\\n  4 |   return foo;\\n  5 | }\\n  6 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Calls in React\\nDESCRIPTION: This snippet shows examples of calling React hooks conditionally using logical AND (&&), OR (||), and nullish coalescing (??) operators. These patterns violate the Rules of Hooks, which state that hooks must be called at the top level of a React function component or custom hook, and never within loops, conditions, or nested functions. The provided error messages highlight these violations and link to the official React documentation for further details.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-f69800950ff0.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useHook({bar}) {\\n  let foo1 = bar && useState();\\n  let foo2 = bar || useState();\\n  let foo3 = bar ?? useState();\\n}\\n```\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useHook({bar}: { bar: boolean }): void {\\n  let foo1 = bar && useState();\\n  let foo2 = bar || useState();\\n  let foo3 = bar ?? useState();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Incorrect React Hook Usage\\nDESCRIPTION: This snippet shows a React component where a hook ('Foo.useFoo') is assigned to a variable and then called. The error message indicates that hooks must be called directly and cannot be passed around as regular values. This is a common mistake when developing React applications.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.propertyload-hook.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component() {\\n  const x = Foo.useFoo;\\n  return x();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call Example\\nDESCRIPTION: This JavaScript code snippet demonstrates an invalid usage of React Hooks. Hooks like `useConditionalHook` must be called directly within the body of a function component or a custom hook, not inside nested function expressions. This violates the 'Rules of Hooks' and will result in a runtime error.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid.invalid-rules-of-hooks-0a1dbff27ba0.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction createHook() {\\n  return function useHookWithConditionalHook() {\\n    if (cond) {\\n      useConditionalHook();\\n    }\\n  };\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Conditional Hook Call\\nDESCRIPTION: This JavaScript code snippet illustrates a violation of the React Rules of Hooks. The `useState()` hook is called conditionally within the `useHook` function, which is not allowed. Hooks must be called at the top level of a React function component or another custom Hook, and their order must remain consistent across renders.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-f3d6c5e9c83d.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction useHook() {\\n  if (b) {\\n    console.log('true');\\n  } else {\\n    console.log('false');\\n  }\\n  if (a) return;\\n  useState();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call: useState inside Function Expression\\nDESCRIPTION: This snippet demonstrates an invalid usage of React Hooks. The `useState` hook is called inside a nested function expression (`handleClick`), which violates the 'Rules of Hooks'. Hooks must be called directly within the body of a function component or a custom hook, not within nested functions or callbacks. This can lead to unpredictable behavior and errors.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid.invalid-rules-of-hooks-449a37146a83.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction createComponent() {\\n  return function ComponentWithHookInsideCallback() {\\n    function handleClick() {\\n      useState();\\n    }\\n  };\\n}\\n```\\n\\nLANGUAGE: APIDOC\\nCODE:\\n```\\nError: Invalid Hook Call\\n\\nDescription: Hooks must be called at the top level in the body of a function component or custom hook, and may not be called within function expressions.\\n\\nRule Violation: Hooks cannot be called inside nested functions, callbacks, or event handlers.\\n\\nExample Violation:\\n```javascript\\nfunction MyComponent() {\\n  const handleClick = () => {\\n    useState(0); // Invalid: Called inside an event handler\\n  };\\n  return <button onClick={handleClick}>Click Me</button>;\\n}\\n```\\n\\nCorrect Usage:\\n```javascript\\nfunction MyComponent() {\\n  const [count, setCount] = useState(0);\\n  const handleClick = () => {\\n    setCount(count + 1);\\n  };\\n  return <button onClick={handleClick}>Clicked {count} times</button>;\\n}\\n```\\n\\nSee also: https://react.dev/warnings/invalid-hook-call-warning\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hooks Rules Violation Error\\nDESCRIPTION: Details the specific error message and stack trace when the 'Rules of Hooks' are violated in React. This error indicates that hooks are being called conditionally or in an inconsistent order, which is not permitted.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.error.rules-of-hooks-e29c874aa913.expect.md#_snippet_1\\n\\nLANGUAGE: APIDOC\\nCODE:\\n```\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\ntodo.error.rules-of-hooks-e29c874aa913.ts:9:4\\n   7 |\\n   8 |   try {\\n   9 |     f();\\n> 10 |     useState();\\n     |     ^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n  11 |   } catch {}\\n  12 | }\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call Example\\nDESCRIPTION: This JavaScript code snippet demonstrates an invalid hook call within a function. React enforces that hooks must be called in the same order on every render and cannot be called conditionally. This example violates that rule by calling `useHook1` and `useHook2` conditionally based on variables `a` and `b`.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-9bf17c174134.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useHook() {\\n  a && useHook1();\\n  b && useHook2();\\n}\\n\\n```\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useHook() {\\n  a && useHook1();\\n  b && useHook2();\\n}\\n\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid React Hook Call\\nDESCRIPTION: This JavaScript code snippet demonstrates a common error in React development where a hook (`useHook`) is called conditionally within a labeled block. This violates the 'Rules of Hooks', which mandates that hooks must be called at the top level of a React function component or custom hook, and in the same order on every render. The provided error message details the specific violation and links to the official React documentation for further explanation.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-49d341e5d68f.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction useLabeledBlock() {\\n  label: {\\n    if (a) break label;\\n    useHook();\\n  }\\n}\\n```\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nFound 1 error:\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-rules-of-hooks-49d341e5d68f.ts:8:4\\n   6 |\\n   7 |\\n>  8 |     useHook();\\n     |     ^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n   9 |\\n  10 |\\n  11 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Component with Invalid Hook Usage\\nDESCRIPTION: This JavaScript code defines a React component that attempts to call a hook (`useHook`) within a `for` loop. This violates React's Rules of Hooks, which state that hooks must be called in the same order on every render and not conditionally. The loop structure leads to inconsistent hook calls.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-for.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component(props) {\\n  let i = 0;\\n  for (let x = 0; useHook(x) < 10; useHook(i), x++) {\\n    i += useHook(x);\\n  }\\n  return i;\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Valid React Hook Usage\\nDESCRIPTION: This snippet shows a custom React hook `useFoo` that correctly utilizes other hooks like `useVideoPlayer` and `useMedia`. It demonstrates a standard pattern for integrating custom logic within React components.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-from-property-of-other-hook.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction useFoo({data}) {\\n  const player = useVideoPlayer();\\n  const foo = player.useMedia();\\n  return foo;\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: useFoo React Hook\\nDESCRIPTION: A React hook named `useFoo` that takes props containing a potentially null object with 'x' and 'y' properties. It utilizes a custom hook `useNoAlias` and handles nullish coalescing. The hook is intended for use with shared runtime functionalities.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.todo-optional-call-chain-in-logical-expr.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nimport {useNoAlias} from 'shared-runtime';\\n\\nfunction useFoo(props: {value: {x: string; y: string} | null}) {\\n  const value = props.value;\\n  return useNoAlias(value?.x, value?.y) ?? {};\\n}\\n\\nexport const FIXTURE_ENTRYPONT = {\\n  fn: useFoo,\\n  props: [{value: null}],\\n};\\n\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Conditional Hook Call in React\\nDESCRIPTION: This snippet illustrates a React component that attempts to call a hook conditionally using optional chaining (`?.`). This violates the React 'Rules of Hooks', which state that hooks must be called at the top level of a React function component or custom hook, and never conditionally. The example also shows the associated error message and its location within the code.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-optional-methodcall.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component() {\\n  const {result} = Module.useConditionalHook?.() ?? {};\\n  return result;\\n}\\n```\\n\\nLANGUAGE: react\\nCODE:\\n```\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-hook-optional-methodcall.ts:2:19\\n  1 |\\n  2 |   const {result} = Module.useConditionalHook?.() ?? {};\\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n  3 |   return result;\\n  4 | }\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hook Rules Violation Error Messages\\nDESCRIPTION: This section details the error messages generated by React's linting rules when hooks are misused. It highlights that hooks cannot be referenced as normal values and must be called directly, providing specific line and character indicators for the violations.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.invalid-ternary-with-hook-values.expect.md#_snippet_1\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nFound 4 errors:\\n\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-ternary-with-hook-values.ts:2:25\\n  1 | function Component(props) {\\n> 2 |   const x = props.cond ? useA : useB;\\n    |                          ^^^^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  3 |   return x();\\n  4 | }\\n  5 | \\n\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-ternary-with-hook-values.ts:2:32\\n  1 | function Component(props) {\\n> 2 |   const x = props.cond ? useA : useB;\\n    |                                 ^^^^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  3 |   return x();\\n  4 | }\\n  5 | \\n\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-ternary-with-hook-values.ts:2:12\\n  1 | function Component(props) {\\n> 2 |   const x = props.cond ? useA : useB;\\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  3 |   return x();\\n  4 | }\\n  5 | \\n\\nError: Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n\\nerror.invalid-ternary-with-hook-values.ts:3:9\\n  1 | function Component(props) {\\n  2 |   const x = props.cond ? useA : useB;\\n> 3 |   return x();\\n    |          ^ Hooks may not be referenced as normal values, they must be called. See https://react.dev/reference/rules/react-calls-components-and-hooks#never-pass-around-hooks-as-regular-values\\n  4 | }\\n  5 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Hook Call in Function Expression\\nDESCRIPTION: This snippet demonstrates an invalid usage of React Hooks where `useEffect` is called within a function expression passed to `React.memo`. According to the Rules of Hooks, hooks must be called at the top level of a function component or custom hook, not inside nested functions or callbacks. This can lead to unpredictable behavior and runtime errors.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.bail.rules-of-hooks-8503ca76d6f8.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nconst ComponentWithHookInsideCallback = React.memo(props => {\\n  useEffect(() => {\\n    useHookInsideCallback();\\n  });\\n  return <button {...props} />;\\n});\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid Conditional Hook Call in React\\nDESCRIPTION: This JavaScript code snippet demonstrates an incorrect way to use React Hooks. The `useCustomHook` is called conditionally based on the `props.fancy` value. React's Rules of Hooks state that hooks must be called at the top level of a React function component or a custom hook, and not within loops, conditions, or nested functions. The associated error message explains this violation and provides a link to the official React documentation for more information.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/todo.error.invalid-rules-of-hooks-368024110a58.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nconst FancyButton = forwardRef(function (props, ref) {\\n  if (props.fancy) {\\n    useCustomHook();\\n  }\\n  return <button ref={ref}>{props.children}</button>;\\n});\\n```\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nconst FancyButton = forwardRef(function (props: { fancy?: boolean; children: React.ReactNode }, ref: React.Ref<HTMLButtonElement>) {\\n  if (props.fancy) {\\n    useCustomHook();\\n  }\\n  return <button ref={ref}>{props.children}</button>;\\n});\\n```\\n\\n----------------------------------------\\n\\nTITLE: Conditional Hook Call in React\\nDESCRIPTION: This snippet demonstrates an invalid usage of React Hooks where a hook (`useConditionalHook`) is called conditionally using optional chaining (`?.`) and nullish coalescing (`??`). This violates the 'Rules of Hooks', which mandate that hooks must be called at the top level of a React function component or custom hook, and never conditionally. The error message points to the specific line and provides a link to the official React documentation for further details.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-optionalcall.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component() {\\n  const {result} = useConditionalHook?.() ?? {};\\n  return result;\\n}\\n```\\n\\nLANGUAGE: typescript\\nCODE:\\n```\\nfunction Component() {\\n  const {result} = useConditionalHook?.() ?? {};\\n  return result;\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Incorrectly Referencing React Hooks\\nDESCRIPTION: This snippet demonstrates a common error in React where a hook (`useFoo`) is assigned to a variable (`y`) within a conditional statement and then called later. React hooks must be called directly within the component body, not referenced as values or passed around.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-reassigned-in-conditional.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component(props) {\\n  let y;\\n  props.cond ? (y = useFoo) : null;\\n  return y();\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hooks Rule Violation Error\\nDESCRIPTION: This section details the error message generated by React when the 'Rules of Hooks' are violated. It specifically points out the conditional calling of a hook and provides a link to the official documentation for further explanation.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-if-alternate.expect.md#_snippet_1\\n\\nLANGUAGE: react\\nCODE:\\n```\\nFound 1 error:\\n\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-hook-if-alternate.ts:5:8\\n  3 |\\n  4 |\\n> 5 |     x = useHook();\\n    |         ^^^^^^^\\n  6 |\\n  7 |\\n  8 |\\n    | Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid React Hook Call (Conditional)\\nDESCRIPTION: This JavaScript code snippet illustrates a common error in React development: calling a hook conditionally within a ternary operator. According to the Rules of Hooks, hooks must be called at the top level of a React function component or custom hook, and never inside loops, conditions, or nested functions. This example is expected to fail and trigger a warning.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-b4dcda3d60ed.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Expected to fail\\n\\n// Invalid because it's dangerous and might not warn otherwise.\\n// This *must* be invalid.\\nfunction ComponentWithTernaryHook() {\\n  cond ? useTernaryHook() : null;\\n}\\n```\\n\\nLANGUAGE: APIDOC\\nCODE:\\n```\\nReact Rules of Hooks:\\n\\n- Hooks must always be called in a consistent order.\\n- Hooks may not be called conditionally.\\n- Hooks must be called at the top level of a React function component or custom hook.\\n\\nExample Error:\\nError: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\nerror.invalid-rules-of-hooks-b4dcda3d60ed.ts:6:9\\n  4 | // This *must* be invalid.\\n  5 | function ComponentWithTernaryHook() {\\n> 6 |   cond ? useTernaryHook() : null;\\n    |          ^^^^^^^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n  7 | }\\n  8 |\\n```\\n\\n----------------------------------------\\n\\nTITLE: Conditional Hook Call in React\\nDESCRIPTION: This JavaScript code snippet shows a React component where the `useHook()` function is called conditionally within an `if-else` block. This violates the React 'Rules of Hooks', which mandate that hooks must be called at the top level of a React function component or custom hook, and in the same order on every render.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-if-alternate.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction Component(props) {\\n  let x = null;\\n  if (props.cond) {\\n  } else {\\n    x = useHook();\\n  }\\n  return x;\\n}\\n```\\n\\n----------------------------------------\\n\\nTITLE: Invalid React Hook Call\\nDESCRIPTION: This JavaScript code snippet demonstrates a violation of React's Rules of Hooks. The `useState` hook is called conditionally within the `useHook` function, which is not allowed. The provided error message explains that hooks must be called in a consistent order and not conditionally. Refer to the React documentation for detailed rules.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-rules-of-hooks-9718e30b856c.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\nfunction useHook() {\\n  if (a) return;\\n  if (b) {\\n    console.log('true');\\n  } else {\\n    console.log('false');\\n  }\\n  useState();\\n}\\n```\\n\\nLANGUAGE: APIDOC\\nCODE:\\n```\\nError Message:\\n  Found 1 error:\\n\\n  Error: Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n\\n  error.invalid-rules-of-hooks-9718e30b856c.ts:12:2\\n    10 |     console.log('false');\\n    11 |   }\\n  > 12 |   useState();\\n       |   ^^^^^^^^ Hooks must always be called in a consistent order, and may not be called conditionally. See the Rules of Hooks (https://react.dev/warnings/invalid-hook-call-warning)\\n    13 | }\\n    14 | \\n\\nRule Violation:\\n  - Hooks cannot be called inside loops, conditions, or nested functions.\\n  - All hooks must be called at the top level of a React function component or a custom hook.\\n```\\n\\n----------------------------------------\\n\\nTITLE: React Hook Naming Conventions\\nDESCRIPTION: Demonstrates valid React hook naming conventions, emphasizing that hooks must start with 'use' followed by a capital letter. It also shows examples of valid custom hooks and the use of Jest's fake timers.\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/rules-of-hooks-df4d750736f3.expect.md#_snippet_0\\n\\nLANGUAGE: javascript\\nCODE:\\n```\\n// Valid because they're not matching use[A-Z].\\nfooState();\\n_use();\\n_useState();\\nuse_hook();\\n// also valid because it's not matching the PascalCase namespace\\njest.useFakeTimer();\\n\\n```\\n\\n========================\\nQUESTIONS AND ANSWERS\\n========================\\nTOPIC: React Hooks - Conditional Hook Call Example\\nQ: What specific React rule is violated by calling a Hook conditionally?\\nA: Calling a Hook conditionally violates the 'Rules of Hooks'. This rule mandates that Hooks must be called at the top level of a React function component or a custom Hook, not within loops, conditions, or nested functions.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-optional-methodcall.expect.md#_qa_1\\n\\n----------------------------------------\\n\\nTOPIC: React Hook Usage Violations\\nQ: What is the rule in React regarding referencing hooks as normal values?\\nA: In React, hooks must be called directly and cannot be referenced as normal values. This means you should not assign a hook to a variable or pass it around without invoking it.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-call-phi-possibly-hook.expect.md#_qa_0\\n\\n----------------------------------------\\n\\nTOPIC: React Component Hook Usage Error\\nQ: What is the rule regarding referencing React Hooks as normal values?\\nA: React Hooks must be called directly, not referenced as normal values. Attempting to assign a hook to a variable or pass it around without calling it will result in an error.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.invalid-ternary-with-hook-values.expect.md#_qa_0\\n\\n----------------------------------------\\n\\nTOPIC: React Component Hook Usage\\nQ: What does the error 'Hooks must be the same function on every render' indicate in React?\\nA: This error indicates that a hook is being called conditionally or that the function passed as a hook might be changing between renders. React requires hooks to be called at the top level of a component or custom hook, and the same hook must be called on every render.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-as-prop.expect.md#_qa_2\\n\\n----------------------------------------\\n\\nTOPIC: React Hooks Rules Violation\\nQ: Where can React Hooks be safely called?\\nA: React Hooks can only be called at the top level of a React function component or a custom React hook. They should not be called within regular JavaScript functions or inside other Hooks unless it's a custom hook.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.bail.rules-of-hooks-3d692676194b.expect.md#_qa_3\\n\\n----------------------------------------\\n\\nTOPIC: React Hooks Usage Example\\nQ: What is the React rule regarding referencing hooks as normal values?\\nA: React rules state that hooks cannot be referenced as normal values. They must always be called directly.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.hook-property-load-local-hook.expect.md#_qa_0\\n\\n----------------------------------------\\n\\nTOPIC: React Compiler Test - useHookNotTypedAsHook Example\\nQ: How does the React compiler identify potential hooks within a module?\\nA: The React compiler identifies potential hooks by their naming convention. Properties that start with the prefix 'use' are expected to be React hooks and must be typed accordingly.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.invalid-type-provider-hook-name-not-typed-as-hook.expect.md#_qa_2\\n\\n----------------------------------------\\n\\nTOPIC: React Hook Usage Violations\\nQ: What type of error does React report when a hook is conditionally referenced?\\nA: React reports an error for 'conditional hook calls' when a hook might be referenced as a normal value. This occurs when the variable assigned a hook is determined by a condition, and the hook itself is not directly called.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-call-phi-possibly-hook.expect.md#_qa_2\\n\\n----------------------------------------\\n\\nTOPIC: React Hooks Usage Example\\nQ: What is the React rule regarding dynamic use of hooks?\\nA: React rules state that hooks must be the same function on every render. This value may change over time to a different function, which is not allowed. This rule ensures predictable behavior and prevents issues related to state management and rendering cycles.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-from-property-of-other-hook.expect.md#_qa_0\\n\\n----------------------------------------\\n\\nTOPIC: React Component Hook Usage\\nQ: What is the rule regarding the consistency of hooks in React?\\nA: In React, hooks must be the same function on every render. This means you cannot dynamically use hooks or change the hook function between renders.\\n\\n\\nSOURCE: https://github.com/facebook/react/blob/main/compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/rules-of-hooks/error.invalid-hook-as-prop.expect.md#_qa_0\"\n        }\n      ]\n    },\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1030868\n  }\n}\n\n请分析这个测试是否通过，并提供详细分析。\n"
            }
        ],
        "stream": false
    },
    "response": {
        "id": "chatcmpl-c1e997f3-a3a2-9f00-ac07-fc2f477d3417",
        "choices": [
            {
                "finish_reason": "stop",
                "index": 0,
                "logprobs": null,
                "message": {
                    "content": "```json\n{\n  \"status\": \"pass\",\n  \"confidence\": 0.92,\n  \"analysis\": \"测试通过。工具成功响应了对 '/facebook/react' 库中 'hooks' 主题的文档请求，返回了大量与 React Hooks 相关的代码片段、错误示例、最佳实践以及问答内容，涵盖了 React Hooks 的核心规则（如必须在顶层调用、不能在条件语句中调用等）。虽然响应内容较为冗长且结构复杂，但信息完整、相关性强，符合 'success' 类型的期望结果。因此，测试结果应判定为通过。\",\n  \"issues\": [\n    \"响应内容结构复杂，缺乏清晰的章节划分，可能影响用户快速获取所需信息。\",\n    \"部分代码片段重复或相似度高，可能影响性能和用户体验。\",\n    \"未提供文档的版本信息或时间戳，无法确认是否为最新文档。\",\n    \"未明确说明是否支持文档分页或搜索功能，影响可用性。\"\n  ],\n  \"recommendations\": [\n    \"优化响应结构，使用清晰的章节划分（如规则说明、最佳实践、错误示例、问答等）。\",\n    \"对返回的代码片段进行去重和归类，提升信息密度。\",\n    \"在响应中添加文档版本或更新时间，确保用户获取的是最新内容。\",\n    \"支持分页、搜索或过滤功能，提升文档查询的可用性和性能。\",\n    \"提供文档摘要或推荐理由，帮助用户快速判断文档相关性。\"\n  ]\n}\n```",
                    "refusal": null,
                    "role": "assistant",
                    "annotations": null,
                    "audio": null,
                    "function_call": null,
                    "tool_calls": null
                }
            }
        ],
        "created": 1755361065,
        "model": "qwen-plus",
        "object": "chat.completion",
        "service_tier": null,
        "system_fingerprint": null,
        "usage": {
            "completion_tokens": 327,
            "prompt_tokens": 40658,
            "total_tokens": 40985,
            "completion_tokens_details": null,
            "prompt_tokens_details": {
                "audio_tokens": null,
                "cached_tokens": 0
            }
        }
    },
    "usage": {
        "type": "chat",
        "usage": {
            "prompt_tokens": 40658,
            "completion_tokens": 327,
            "total_tokens": 40985
        }
    }
}