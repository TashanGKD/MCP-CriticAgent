{
  "report_id": "8950998a-614b-463e-a540-db4109f98483",
  "created_at": "2025-08-17T00:05:42.655842",
  "updated_at": "2025-08-17T00:05:42.655842",
  "metadata": {
    "session_id": "2d163fee-01ef-4829-af29-1ede18059703",
    "test_environment": "local",
    "trigger_source": "manual",
    "operator": null,
    "tags": [
      "basic",
      "mcp-test"
    ]
  },
  "tool_info": {
    "name": "Fetcher MCP",
    "author": "jae-jae",
    "github_url": "https://github.com/jae-jae/fetcher-mcp",
    "package_name": "fetcher-mcp",
    "category": "实用工具",
    "description": "用于通过 Playwright 无头浏览器获取网页内容的 MCP 服务器。支持智能内容提取和多样的输出格式。需要通过 'npx playwright install chromium' 安装 Playwright 浏览器。",
    "version": null,
    "requires_api_key": false,
    "api_requirements": [],
    "language": "Unknown",
    "license": null,
    "stars": null,
    "last_updated": null
  },
  "deployment": {
    "status": "success",
    "start_time": "2025-08-17T00:05:38.604228",
    "end_time": "2025-08-17T00:05:42.655842",
    "duration_seconds": 0.018032073974609375,
    "package_manager": "npm",
    "deployment_method": "local",
    "process_id": 44944,
    "server_id": "mcp_07fe93ed",
    "port": null,
    "error_details": null,
    "resource_usage": {
      "memory_mb": 6.83203125,
      "cpu_percent": 0.0,
      "num_threads": 3,
      "create_time": 1755360333.4190533
    }
  },
  "available_tools": [
    {
      "name": "fetch_url",
      "description": "Retrieve web page content from a specified URL",
      "input_schema": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to fetch"
          },
          "timeout": {
            "type": "number",
            "description": "Page loading timeout in milliseconds, default is 30000 (30 seconds)"
          },
          "waitUntil": {
            "type": "string",
            "description": "Specifies when navigation is considered complete, options: 'load', 'domcontentloaded', 'networkidle', 'commit', default is 'load'"
          },
          "extractContent": {
            "type": "boolean",
            "description": "Whether to intelligently extract the main content, default is true"
          },
          "maxLength": {
            "type": "number",
            "description": "Maximum length of returned content (in characters), default is no limit"
          },
          "returnHtml": {
            "type": "boolean",
            "description": "Whether to return HTML content instead of Markdown, default is false"
          },
          "waitForNavigation": {
            "type": "boolean",
            "description": "Whether to wait for additional navigation after initial page load (useful for sites with anti-bot verification), default is false"
          },
          "navigationTimeout": {
            "type": "number",
            "description": "Maximum time to wait for additional navigation in milliseconds, default is 10000 (10 seconds)"
          },
          "disableMedia": {
            "type": "boolean",
            "description": "Whether to disable media resources (images, stylesheets, fonts, media), default is true"
          },
          "debug": {
            "type": "boolean",
            "description": "Whether to enable debug mode (showing browser window), overrides the --debug command line flag if specified"
          }
        },
        "required": [
          "url"
        ]
      },
      "output_schema": {},
      "category": "general",
      "required_permissions": []
    },
    {
      "name": "fetch_urls",
      "description": "Retrieve web page content from multiple specified URLs",
      "input_schema": {
        "type": "object",
        "properties": {
          "urls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of URLs to fetch"
          },
          "timeout": {
            "type": "number",
            "description": "Page loading timeout in milliseconds, default is 30000 (30 seconds)"
          },
          "waitUntil": {
            "type": "string",
            "description": "Specifies when navigation is considered complete, options: 'load', 'domcontentloaded', 'networkidle', 'commit', default is 'load'"
          },
          "extractContent": {
            "type": "boolean",
            "description": "Whether to intelligently extract the main content, default is true"
          },
          "maxLength": {
            "type": "number",
            "description": "Maximum length of returned content (in characters), default is no limit"
          },
          "returnHtml": {
            "type": "boolean",
            "description": "Whether to return HTML content instead of Markdown, default is false"
          },
          "waitForNavigation": {
            "type": "boolean",
            "description": "Whether to wait for additional navigation after initial page load (useful for sites with anti-bot verification), default is false"
          },
          "navigationTimeout": {
            "type": "number",
            "description": "Maximum time to wait for additional navigation in milliseconds, default is 10000 (10 seconds)"
          },
          "disableMedia": {
            "type": "boolean",
            "description": "Whether to disable media resources (images, stylesheets, fonts, media), default is true"
          },
          "debug": {
            "type": "boolean",
            "description": "Whether to enable debug mode (showing browser window), overrides the --debug command line flag if specified"
          }
        },
        "required": [
          "urls"
        ]
      },
      "output_schema": {},
      "category": "general",
      "required_permissions": []
    }
  ],
  "test_executions": [
    {
      "test_id": "bfc6a4d4",
      "test_name": "MCP协议通信测试",
      "test_type": "basic",
      "status": "success",
      "start_time": "2025-08-17T00:05:42.666858",
      "end_time": "2025-08-17T00:05:42.666858",
      "duration_seconds": 0.005000591278076172,
      "input_data": {},
      "output_data": {
        "result": "成功获取工具列表"
      },
      "error_message": null,
      "assertion_results": [],
      "performance_metrics": {}
    },
    {
      "test_id": "bba71ad3",
      "test_name": "工具调用测试: fetch_url",
      "test_type": "basic",
      "status": "success",
      "start_time": "2025-08-17T00:05:42.666858",
      "end_time": "2025-08-17T00:05:42.666858",
      "duration_seconds": 0.002002716064453125,
      "input_data": {},
      "output_data": {
        "result": "工具调用成功"
      },
      "error_message": null,
      "assertion_results": [],
      "performance_metrics": {}
    }
  ],
  "quality_metrics": {
    "overall_score": 87.5,
    "deployment_reliability": 100.0,
    "communication_stability": 100.0,
    "functionality_coverage": 100.0,
    "performance_rating": 40.0,
    "documentation_quality": 75.0,
    "api_design_quality": 80.0
  },
  "performance": {
    "deployment_time_seconds": 0.018032073974609375,
    "startup_time_seconds": 0.0,
    "memory_usage_mb": 6.83203125,
    "cpu_usage_percent": 0.0,
    "response_time_avg_ms": 3.5016536712646484,
    "response_time_p95_ms": 5.000591278076172,
    "throughput_ops_per_second": 0.0,
    "stability_score": 100.0
  },
  "overall_status": "success",
  "total_duration_seconds": 0.018032073974609375,
  "errors": [],
  "warnings": [],
  "environment": {
    "platform": "Windows",
    "python_version": "3.12.9",
    "architecture": "64bit"
  },
  "raw_logs": null,
  "screenshots": [],
  "artifacts": []
}